%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 16.0.3
%%For: (ihbe) ()
%%Title: (MPA_logo_cmyk_100.eps)
%%CreationDate: 12/17/2014 12:11 PM
%%Canvassize: 16383
%%BoundingBox: 155 358 440 487
%%HiResBoundingBox: 155.4058 358.5742 439.8584 486.8032
%%DocumentProcessColors: Cyan Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Passermarken])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 297.5 420.5 297.5 420.5
%AI3_TileBox: 11.7197 12.4004 582.9199 830.0801
%AI3_DocumentPreview: Header
%AI5_ArtSize: 595 842
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -397 849 1.23 1671 1032 18 0 1 194 123 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:10 10
%AI7_GridSettings: 28.3465 8 28.3465 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 0
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Nachgezeichnetes Bild) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe-Zusatzmodul Interaktiv malen) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe H\374llen-Zusatzmodul) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Angleichungen-Zusatzmodul) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Kalligrafiepinsel-Zusatzmodul) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (Swatch Libraries.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Zusammengesetzte Form) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Chrom)
(Chrom) 0 6 Bd
[
0
<
464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B
3B3B3B3A3A3A39393939383838383737373636363635353535343434333333333232323131313130
3030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A292929282828282727272626262625
2525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A
1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F
0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A09090909080808070707070606060505050504
04040403030302020202010101010000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A
1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515
15151515151414141414141414131313131313131312121212121212121211111111111111111010
1010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C
0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A090909090909090909080808080808080807070707070707
07060606060606060606050505050505050504040404040404040303030303030303030202020202
02020201010101010101010000000000
>
1 %_Br
0
0.275
1
<
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F
>
1 %_Br
0
<
00000101010102020202030303040404040505050506060607070707080808090909090A0A0A0A0B
0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101011111112121212131313141414141515151516
161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021
212122222222232323232424242525252526262626272727282828282929292A2A2A2A2B2B2B2B2C
2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313132323233333333343434353535353636363637
373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F404040404141414142
42424343434344444444454545464646
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
00000101020203030304040505050606070708080809090A0A0A0B0B0C0C0D0D0D0E0E0F0F101010
1111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121
222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F303031313232
32333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243
434444444545464647474748484949494A4A4B4B4C4C4C4D4D4E4E4F4F4F50505151515252535354
54545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F606061616162626363646464
6565666666676768686969696A6A6B6B
>
1 %_Br
1
0 %_Br
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141
414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A39393938383838373737363636353535
35343434333333323232323131313030302F2F2F2E2E2E2E2D2D2D2C2C2C2C2B2B2B2A2A2A292929
2928282827272726262625252525242424232323222222222121212020201F1F1F1F1E1E1E1D1D1D
1C1C1C1C1B1B1B1A1A1A191919191818181717171616161615151514141413131313121212111111
101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A09090908080807070707060606050505
04040404030303020202010101010000
>
0
0
1 %_Br
[
1 0 50 92 %_BS
%_1 0 50 92 Bs
0 0.275 1 0.12 1 50 59 %_BS
%_0 0.275 1 0.12 1 50 59 Bs
0 0.275 1 0.42 1 50 50 %_BS
%_0 0.275 1 0.42 1 50 50 Bs
1 0 50 49 %_BS
%_1 0 50 49 Bs
1 0 50 41 %_BS
%_1 0 50 41 Bs
1 0.3 0 0 1 50 0 %_BS
%_1 0.3 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Gelb, Orange-Radial)
(Gelb, Orange-Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_BS
%_0 0 1 0 1 52 19 Bs
0 0.55 0.9 0 1 50 100 %_BS
%_0 0.55 0.9 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Regenbogen)
(Regenbogen) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060607070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_BS
%_0 1 0 0 1 50 100 Bs
1 1 0 0 1 50 80 %_BS
%_1 1 0 0 1 50 80 Bs
1 0.0279 0 0 1 50 60 %_BS
%_1 0.0279 0 0 1 50 60 Bs
1 0 1 0 1 50 40 %_BS
%_1 0 1 0 1 50 40 Bs
0 0 1 0 1 50 20 %_BS
%_0 0 1 0 1 50 20 Bs
0 1 1 0 1 50 0 %_BS
%_0 1 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Schwarz, Wei\737)
(Schwarz, Wei\737) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Bl\744tter)
(Bl\744tter) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f
13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f
41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f
27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f
13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f
41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Konfetti)
(Konfetti) 3.2499 2.1004 75.2499 74.1004 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
3.2499 2.1004 m
3.2499 74.1004 L
75.2499 74.1004 L
75.2499 2.1004 L
3.2499 2.1004 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
8.9999 63.3504 m
6.2499 61.3504 l
S
7.4999 7.1004 m
5.2499 5.3504 l
S
76.4999 67.1004 m
73.2499 66.3504 l
S
75.2499 55.3504 m
72.7499 53.6004 l
S
77.9999 50.1004 m
74.9999 50.1004 l
S
74.7499 42.6004 m
71.9999 44.3504 l
S
76.9999 34.3504 m
74.9999 32.8504 l
S
74.4999 22.3504 m
71.7499 24.6004 l
S
76.4999 11.3504 m
72.2499 12.1004 l
S
66.7499 13.1004 m
64.4999 11.3504 l
S
74.9999 29.1004 m
71.9999 29.1004 l
S
61.2499 56.6004 m
59.3559 59.4244 l
S
31.2499 58.1004 m
29.5959 60.6644 l
S
46.2909 62.5444 m
48.1439 65.2254 l
S
71.2139 1.2524 m
72.3279 4.2124 l
S
66.3759 1.1164 m
65.7499 4.3924 l
S
60.2499 26.1004 m
58.3559 28.9244 l
S
51.9039 54.5364 m
50.2499 57.1004 l
S
51.1619 0.2624 m
51.2759 3.2594 l
S
43.7909 3.7944 m
45.6439 6.4754 l
S
35.4619 1.8584 m
34.0389 3.9134 l
S
53.5649 33.3114 m
55.9179 35.9744 l
S
19.1949 1.7254 m
20.5199 3.6764 l
S
12.4969 3.2304 m
13.4079 7.4484 l
S
8.1359 0.3934 m
6.4729 2.7084 l
S
30.2909 4.0564 m
30.4049 7.0544 l
S
10.4999 68.8504 m
13.9999 67.3504 l
S
7.7499 53.3504 m
7.9999 56.6004 l
S
11.2499 30.3504 m
12.7499 26.6004 l
S
8.4999 35.8504 m
10.7499 39.6004 l
S
32.4999 69.6004 m
30.2499 67.1004 l
S
36.7499 69.6004 m
39.9999 66.8504 l
S
53.4999 69.6004 m
56.7499 67.6004 l
S
55.7499 63.6004 m
53.7499 60.3504 l
S
62.7499 64.8504 m
67.7499 67.1004 l
S
70.2499 61.3504 m
67.7499 59.6004 l
S
21.9999 69.3504 m
21.9999 66.3504 l
S
18.9999 64.3504 m
15.7499 63.8504 l
S
23.2499 59.8504 m
23.7499 56.6004 l
S
24.2499 64.3504 m
27.7499 65.1004 l
S
12.4999 52.6004 m
15.2499 54.6004 l
S
10.7499 10.1004 m
10.9999 14.1004 l
S
10.4999 18.3504 m
12.7499 20.8504 l
S
24.4999 8.3504 m
21.9999 11.8504 l
S
32.9999 45.6004 m
30.4999 43.8504 l
S
60.9999 40.3504 m
58.2499 41.8504 l
S
29.9999 34.1004 m
26.2499 34.8504 l
S
34.7499 24.6004 m
32.7499 23.1004 l
S
32.2499 12.6004 m
29.4999 14.8504 l
S
35.4999 8.3504 m
33.4999 9.6004 l
S
32.7499 19.3504 m
29.7499 19.3504 l
S
42.9999 55.1004 m
40.4999 53.3504 l
S
45.7499 49.8504 m
42.7499 49.8504 l
S
42.4999 42.3504 m
39.7499 44.1004 l
S
41.7499 31.6004 m
40.9999 29.1004 l
S
42.2499 22.1004 m
39.4999 24.3504 l
S
42.7499 14.1004 m
40.7499 15.3504 l
S
66.2229 29.5834 m
63.2229 29.5834 l
S
25.4999 31.1004 m
27.9999 29.3504 l
S
30.2499 53.6004 m
33.2499 53.6004 l
S
17.9999 39.3504 m
20.4999 37.6004 l
S
15.2499 34.1004 m
18.2499 34.1004 l
S
18.4999 26.6004 m
21.2499 28.3504 l
S
50.4999 41.1004 m
52.8839 42.6614 l
S
50.8369 48.6294 m
53.2209 46.8084 l
S
57.9719 52.6164 m
57.7499 49.6004 l
S
48.5849 8.5384 m
51.6339 8.4114 l
S
49.5869 14.3794 m
51.9709 12.5584 l
S
56.7219 18.3664 m
57.8449 15.3064 l
S
51.4999 30.6004 m
48.9999 28.8504 l
S
51.2499 23.1004 m
47.9999 24.1004 l
S
60.2499 7.6004 m
57.4999 9.3504 l
S
67.7499 33.1004 m
64.9999 34.8504 l
S
65.4999 22.1004 m
63.4999 20.6004 l
S
22.8349 44.5384 m
25.8839 44.4114 l
S
23.8369 50.3794 m
26.2209 48.5584 l
S
60.9999 45.6004 m
63.7209 45.0584 l
S
18.2499 18.3504 m
18.7499 15.1004 l
S
20.2499 20.3504 m
23.7499 21.1004 l
S
35.9999 61.3504 m
39.9999 60.6004 l
S
36.7229 40.5834 m
37.2229 37.0834 l
S
67.7499 51.1004 m
65.2499 52.3504 l
S
13.2499 60.6004 m
16.4999 57.8504 l
S
7.9999 44.6004 m
5.4999 42.8504 l
S
18.9999 50.1004 m
16.9999 48.6004 l
S
44.5409 69.2944 m
46.3939 71.9754 l
S
67.7909 39.0444 m
69.6439 41.7254 l
S
37.0409 47.7944 m
37.7499 50.6004 l
S
23.5409 15.2944 m
24.2499 18.1004 l
S
34.9999 31.3504 m
32.9999 29.8504 l
S
4.4999 67.1004 m
1.2499 66.3504 l
S
3.2499 55.3504 m
0.7499 53.6004 l
S
5.9999 50.1004 m
2.9999 50.1004 l
S
4.9999 34.3504 m
2.9999 32.8504 l
S
4.4999 11.3504 m
0.2499 12.1004 l
S
2.9999 29.1004 m
-0.0001 29.1004 l
S
71.2139 73.2524 m
72.3279 76.2124 l
S
66.3759 73.1164 m
65.7499 76.3924 l
S
51.1619 72.2624 m
51.2759 75.2594 l
S
35.4619 73.8584 m
34.0389 75.9134 l
S
19.1949 73.7254 m
20.5199 75.6764 l
S
8.1359 72.3934 m
6.4729 74.7084 l
S
8.4999 22.1004 m
4.7499 22.8504 l
S
71.6169 16.7594 m
69.7229 19.5834 l
S
27.2229 38.0834 m
27.9049 40.8724 l
S
47.9999 37.1004 m
45.9999 35.6004 l
S
58.7229 72.0834 m
60.7229 75.0834 l
S
58.7229 0.0834 m
60.7229 3.0834 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Streifen)
(Streifen) 0.2498 -0.0005 72.2498 71.9995 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d0 XR
-0.0002 3.5994 m
72.4998 3.5994 L
S
-0.0002 17.9995 m
72.4998 17.9995 L
S
-0.0002 32.3996 m
72.4998 32.3996 L
S
-0.0002 46.7994 m
72.4998 46.7994 L
S
-0.0002 61.1995 m
72.4998 61.1995 L
S
-0.0002 10.7994 m
72.4998 10.7994 L
S
-0.0002 25.1995 m
72.4998 25.1995 L
S
-0.0002 39.5994 m
72.4998 39.5994 L
S
-0.0002 53.9995 m
72.4998 53.9995 L
S
-0.0002 68.3996 m
72.4998 68.3996 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Ziegel)
(Ziegel) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0 68.4097 m
72 68.4097 l
S
0 61.209 m
72 61.209 L
S
0 54.0088 m
72 54.0088 L
S
0 46.8076 m
72 46.8076 L
S
0 39.6084 m
72 39.6084 L
S
0 32.4072 m
72 32.4072 L
S
0 25.207 m
72 25.207 L
S
0 18.0059 m
72 18.0059 L
S
0 10.8057 m
72 10.8057 L
S
0 3.6064 m
72 3.6064 L
S
68.4102 68.4097 m
68.4102 61.2217 l
S
54.0098 68.4097 m
54.0098 61.2217 L
S
39.6094 68.4097 m
39.6094 61.2217 L
S
25.21 68.4097 m
25.21 61.2217 L
S
10.8105 68.4097 m
10.8105 61.2217 L
S
68.4102 53.9717 m
68.4102 46.7842 l
S
54.0098 53.9717 m
54.0098 46.7842 L
S
39.6094 53.9717 m
39.6094 46.7842 L
S
25.21 53.9717 m
25.21 46.7842 L
S
10.8105 53.9717 m
10.8105 46.7842 L
S
68.4102 39.5967 m
68.4102 32.4092 l
S
54.0098 39.5967 m
54.0098 32.4092 L
S
39.6094 39.5967 m
39.6094 32.4092 L
S
25.21 39.5967 m
25.21 32.4092 L
S
10.8105 39.5967 m
10.8105 32.4092 L
S
68.4102 25.2217 m
68.4102 18.0342 l
S
54.0098 25.2217 m
54.0098 18.0342 L
S
39.6094 25.2217 m
39.6094 18.0342 L
S
25.21 25.2217 m
25.21 18.0342 L
S
10.8105 25.2217 m
10.8105 18.0342 L
S
68.4102 10.7842 m
68.4102 3.5967 l
S
54.0098 10.7842 m
54.0098 3.5967 L
S
39.6094 10.7842 m
39.6094 3.5967 L
S
25.21 10.7842 m
25.21 3.5967 L
S
10.8105 10.7842 m
10.8105 3.5967 L
S
61.1973 3.5967 m
61.1973 0 L
S
46.7969 3.5967 m
46.7969 0 L
S
32.3965 3.5967 m
32.3965 0 L
S
17.9971 3.5967 m
17.9971 0 L
S
3.5967 3.5967 m
3.5967 0 l
S
61.1973 18.0342 m
61.1973 10.8467 L
S
46.7969 18.0342 m
46.7969 10.8467 L
S
32.3965 18.0342 m
32.3965 10.8467 L
S
17.9971 18.0342 m
17.9971 10.8467 L
S
3.5967 18.0342 m
3.5967 10.8467 l
S
61.1973 32.4092 m
61.1973 25.2217 L
S
46.7969 32.4092 m
46.7969 25.2217 L
S
17.9971 32.4092 m
17.9971 25.2217 L
S
3.5967 32.4092 m
3.5967 25.2217 l
S
61.1973 46.7842 m
61.1973 39.5967 L
S
46.7969 46.7842 m
46.7969 39.5967 L
S
32.3965 46.7842 m
32.3965 39.5967 L
S
17.9971 46.7842 m
17.9971 39.5967 L
S
3.5967 46.7842 m
3.5967 39.5967 l
S
61.1973 61.2217 m
61.1973 54.0347 L
S
46.7969 61.2217 m
46.7969 54.0347 L
S
32.3965 61.2217 m
32.3965 54.0347 L
S
17.9971 61.2217 m
17.9971 54.0347 L
S
3.5967 61.2217 m
3.5967 54.0347 l
S
61.1973 71.959 m
61.1973 68.4717 L
S
46.7969 71.959 m
46.7969 68.4717 L
S
32.3965 71.959 m
32.3965 68.4717 L
S
17.9971 71.959 m
17.9971 68.4717 L
S
3.5967 71.959 m
3.5967 68.4717 l
S
32.3965 32.4092 m
32.3965 25.2217 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7843.75 8612 m
-7843.75 8588 L
-7893.75 8588 L
-7893.75 8612 L
-7843.75 8612 L
n
u
0 Ap
0 O
1 g
-7863.75 8610 m
-7875.96 8613.0527 -7884.4434 8603.0605 -7893.75 8595.9512 C
F
-7853.75 8610 m
-7870.1279 8614.0938 -7879.8008 8594.7227 -7893.75 8590.3154 C
F
-7893.75 8590 m
-7873.75 8585 -7863.75 8615 -7843.75 8610 C
F
-7883.75 8590 m
-7867.3721 8585.9053 -7857.6992 8605.2773 -7843.75 8609.6846 C
F
-7873.75 8590 m
-7861.54 8586.9473 -7853.0566 8596.9395 -7843.75 8604.0488 C
F
-7853.75 8590 m
-7850.1279 8589.0938 -7846.8354 8589.3408 -7843.75 8590.3154 C
F
-7883.75 8610 m
-7887.3721 8610.9053 -7890.6655 8610.6592 -7893.75 8609.6846 C
F
-7853.7817 8590.125 m
-7859.9009 8588.6162 -7863.7817 8590.125 V
-7867.8774 8588.6475 -7873.7817 8590.125 V
-7878.7446 8588.4492 -7883.7817 8590.125 V
-7889.7969 8588.5742 -7893.7817 8590.125 V
-7893.7817 8609.8096 L
-7890.6958 8610.7842 -7887.2969 8610.9912 -7883.3799 8609.9082 C
-7877.2134 8611.4912 -7873.4634 8609.9082 V
-7868.4634 8611.4912 -7863.3799 8609.8242 V
-7859.0474 8611.4082 -7853.3799 8609.9082 V
-7847.8799 8611.3242 -7843.7817 8610.125 V
-7843.7817 8590.4395 L
-7846.5254 8589.4287 -7849.6514 8588.9287 -7853.7817 8590.125 C
f
0 R
0 G
1 J 1 j 0.5 w-7873.75 8610 m
-7881.54 8611.9473 -7887.8135 8608.585 -7893.75 8604.0488 C
S
-7863.75 8610 m
-7875.96 8613.0527 -7884.4434 8603.0605 -7893.75 8595.9512 C
S
-7853.75 8610 m
-7870.1279 8614.0938 -7879.8008 8594.7227 -7893.75 8590.3154 C
S
-7893.75 8590 m
-7873.75 8585 -7863.75 8615 -7843.75 8610 C
S
-7883.75 8590 m
-7867.3721 8585.9053 -7857.6992 8605.2773 -7843.75 8609.6846 C
S
-7873.75 8590 m
-7861.54 8586.9473 -7853.0566 8596.9395 -7843.75 8604.0488 C
S
-7863.75 8590 m
-7855.96 8588.0527 -7849.6875 8591.415 -7843.75 8595.9512 C
S
-7853.75 8590 m
-7850.1279 8589.0938 -7846.8354 8589.3408 -7843.75 8590.3154 C
S
-7883.75 8610 m
-7887.3721 8610.9053 -7890.6655 8610.6592 -7893.75 8609.6846 C
S
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 10)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611 m
-7842.8921 8611 L
-7842.8921 8554.9756 L
-7893 8554.9756 L
-7893 8611 L
n
u
0 O
0.1 1 1 0 k
-7855.9014 8576.5752 m
-7857.7178 8570.0957 -7867.8247 8573.4658 Y
-7867.7915 8573.5303 L
-7877.8999 8570.1602 -7879.7144 8576.6396 V
-7885.6758 8594.0059 -7880.4922 8600.7441 V
-7873.7529 8610.3369 -7869.6055 8610.3369 V
-7866.0103 8610.2705 L
-7861.8638 8610.2705 -7855.1255 8600.6816 Y
-7849.9409 8593.9424 -7855.9014 8576.5752 Y
f
u
0 0 0 1 k
-7860.3926 8554.9756 m
-7861.1167 8556.4199 -7861.9238 8557.4746 V
-7861.4058 8557.0625 -7860.5151 8556.1914 -7860.3926 8554.9756 C
f
-7874.0645 8557.4854 m
-7874.8711 8556.4307 -7875.5942 8554.9863 Y
-7875.4727 8556.2021 -7874.5825 8557.0732 -7874.0645 8557.4854 C
f
U
0 0.61 0.74 0 k
-7859.5977 8579.4609 m
-7860.9038 8574.7959 -7868.1816 8577.2217 Y
-7868.1567 8577.2686 L
-7875.4365 8574.8428 -7876.7417 8579.5078 V
-7881.0337 8592.0117 -7877.3018 8596.8633 V
-7872.4487 8603.7686 -7869.4634 8603.7686 V
-7866.8755 8603.7227 L
-7863.8887 8603.7227 -7859.0366 8596.8174 Y
-7855.3042 8591.9639 -7859.5977 8579.4609 Y
f
u
1 Ap
0.73 0.43 1 0.22 k
0 R
0 0 0 1 K
-7863.6226 8582.2754 m
-7862.8135 8582.2754 -7862.1558 8581.6182 -7862.1558 8580.8096 c
-7862.1558 8580 -7862.8135 8579.3418 -7863.6226 8579.3418 c
-7864.4321 8579.3418 -7865.0889 8580 -7865.0889 8580.8096 c
-7865.0889 8581.6182 -7864.4321 8582.2754 -7863.6226 8582.2754 c
b
-7863.3638 8593.9971 m
-7862.0806 8593.9971 -7861.0415 8593.1201 -7861.0415 8592.042 c
-7861.0415 8590.9609 -7862.0806 8590.0869 -7863.3638 8590.0869 c
-7864.6455 8590.0869 -7865.6846 8590.9609 -7865.6846 8592.042 c
-7865.6846 8593.1201 -7864.6455 8593.9971 -7863.3638 8593.9971 c
b
-7862.8345 8605.7861 m
-7861.2817 8605.7861 -7860.0239 8605.1289 -7860.0239 8604.3213 c
-7860.0239 8603.5117 -7861.2817 8602.8545 -7862.8345 8602.8545 c
-7864.3862 8602.8545 -7865.6455 8603.5117 -7865.6455 8604.3213 c
-7865.6455 8605.1289 -7864.3862 8605.7861 -7862.8345 8605.7861 c
b
-7858.6104 8577.5264 m
-7857.8687 8577.5264 -7857.2671 8576.8154 -7857.2671 8575.9365 c
-7857.2671 8575.0586 -7857.8687 8574.3477 -7858.6104 8574.3477 c
-7859.3535 8574.3477 -7859.9546 8575.0586 -7859.9546 8575.9365 c
-7859.9546 8576.8154 -7859.3535 8577.5264 -7858.6104 8577.5264 c
b
-7857.0034 8599.083 m
-7857.8818 8598.7354 -7858.1494 8597.335 -7857.6035 8595.9541 c
-7857.0566 8594.5752 -7855.9014 8593.7354 -7855.0234 8594.085 c
-7854.1455 8594.4326 -7853.8774 8595.833 -7854.4233 8597.2139 c
-7854.9702 8598.5938 -7856.1255 8599.4316 -7857.0034 8599.083 c
b
u
-7872.0566 8582.1592 m
-7872.8662 8582.1592 -7873.5239 8581.502 -7873.5239 8580.6934 c
-7873.5239 8579.8828 -7872.8662 8579.2266 -7872.0566 8579.2266 c
-7871.2485 8579.2266 -7870.5913 8579.8828 -7870.5913 8580.6934 c
-7870.5913 8581.502 -7871.2485 8582.1592 -7872.0566 8582.1592 c
b
-7872.3159 8593.8799 m
-7873.5991 8593.8799 -7874.6382 8593.0049 -7874.6382 8591.9248 c
-7874.6382 8590.8447 -7873.5991 8589.9697 -7872.3159 8589.9697 c
-7871.0342 8589.9697 -7869.9951 8590.8447 -7869.9951 8591.9248 c
-7869.9951 8593.0049 -7871.0342 8593.8799 -7872.3159 8593.8799 c
b
-7872.8457 8605.6709 m
-7874.3975 8605.6709 -7875.6558 8605.0146 -7875.6558 8604.2041 c
-7875.6558 8603.3936 -7874.3975 8602.7383 -7872.8457 8602.7383 c
-7871.2935 8602.7383 -7870.0352 8603.3936 -7870.0352 8604.2041 c
-7870.0352 8605.0146 -7871.2935 8605.6709 -7872.8457 8605.6709 c
b
-7877.0679 8577.4092 m
-7877.8115 8577.4092 -7878.4121 8576.6982 -7878.4121 8575.8213 c
-7878.4121 8574.9434 -7877.8115 8574.2334 -7877.0679 8574.2334 c
-7876.3262 8574.2334 -7875.7241 8574.9434 -7875.7241 8575.8213 c
-7875.7241 8576.6982 -7876.3262 8577.4092 -7877.0679 8577.4092 c
b
-7878.6758 8598.9678 m
-7877.7983 8598.6201 -7877.5298 8597.2188 -7878.0762 8595.8369 c
-7878.6226 8594.457 -7879.7778 8593.6201 -7880.6558 8593.9678 c
-7881.5342 8594.3164 -7881.8032 8595.7178 -7881.2568 8597.0967 c
-7880.7104 8598.4775 -7879.5552 8599.3154 -7878.6758 8598.9678 c
b
U
U
0 Ap
0 0 0 1 k
-7868.1318 8577.6553 m
-7868.1318 8610.3145 l
F
u
-7852.3906 8563.5303 m
-7853.0815 8562.8369 -7856.0195 8563.7021 Y
-7857.2295 8563.874 -7857.0562 8566.293 Y
-7856.0195 8568.3682 -7856.7104 8568.1943 Y
-7857.2998 8568.1943 -7858.8555 8568.1143 -7859.7822 8568.0625 C
-7860.1226 8566.6689 -7861.6128 8565.4746 -7863.7217 8564.7695 C
-7861.7578 8561.4775 -7863.5176 8560.7949 -7865.2935 8560.79 C
-7865.3096 8560.7021 -7865.3325 8560.6162 -7865.3599 8560.5322 C
-7863.1089 8560.5791 -7862.6392 8558.2588 Y
-7862.4048 8558.0625 -7862.1606 8557.7861 -7861.9238 8557.4746 C
-7862.1416 8557.6475 -7862.2944 8557.7393 Y
-7863.2583 8557.7393 -7864.8774 8559.4941 -7865.4966 8560.207 C
-7865.9194 8559.4434 -7866.8535 8558.9111 -7867.9434 8558.9111 c
-7869.0698 8558.9111 -7870.0322 8559.4785 -7870.4312 8560.2842 C
-7870.9985 8559.624 -7872.6968 8557.751 -7873.6943 8557.751 C
-7873.8462 8557.6572 -7874.0645 8557.4854 V
-7873.8281 8557.793 -7873.5835 8558.0732 -7873.3481 8558.2686 C
-7872.8638 8560.6563 -7870.5254 8560.5342 V
-7870.5449 8560.5889 -7870.5674 8560.6426 -7870.5806 8560.7021 C
-7873.9238 8560.6924 -7872.9375 8563.3174 -7872.2104 8564.6602 C
-7874.5918 8565.376 -7876.2646 8566.7002 -7876.5239 8568.25 C
-7877.4473 8568.2998 -7878.6729 8568.3584 -7879.1802 8568.3584 C
-7879.8726 8568.5313 -7878.8354 8566.458 V
-7878.6626 8564.0391 -7879.8726 8563.8662 V
-7882.8096 8563.002 -7883.5015 8563.6934 V
-7884.1919 8564.5566 -7885.0562 8563.3457 V
-7884.1919 8565.0752 -7882.2915 8564.5566 V
-7879.6982 8563.8662 -7880.3906 8565.5938 V
-7880.9087 8569.0498 -7879.1802 8569.7402 V
-7877.0342 8570.8545 -7875.2822 8571.0889 V
-7874.9087 8571.4141 -7874.4639 8571.7109 -7873.9585 8571.9766 C
-7876.5562 8572.0469 -7879.2246 8572.9209 -7880.0752 8575.9561 C
-7880.5151 8577.2432 -7881.0518 8579.2432 V
-7882.1025 8579.8252 -7883.3022 8581.0078 -7884.5415 8583.2617 C
-7885.3945 8586.4502 -7886.1675 8581.7129 V
-7887.3975 8578.6494 -7888.6504 8578.5381 V
-7887.4702 8580.2871 -7887.9038 8581.416 V
-7886.2998 8585.917 -7884.6138 8584.8994 V
-7883.0986 8584.2197 -7881.6885 8581.8154 V
-7882.0698 8583.4971 -7882.4326 8585.417 -7882.6743 8587.3906 C
-7883.4888 8587.3975 L
-7885.3506 8586.4785 -7885.3262 8589.959 V
-7886.1226 8593.9453 -7885.3594 8596.6826 V
-7884.6475 8599.1504 -7887.1274 8597.9307 V
-7888.2842 8598.3242 -7888.9839 8597.7881 V
-7891.3882 8596.4121 -7893 8598.124 V
-7891.1475 8597.8799 -7890.4482 8598.417 V
-7888.9785 8598.5615 -7888.8975 8599.1777 V
-7885.9561 8599.8555 -7885.1885 8599.0762 V
-7883.4175 8598.2139 -7884.1304 8595.3594 V
-7884.8799 8587.4814 -7883.3198 8589.4053 V
-7883.1182 8589.4209 -7882.8784 8589.5176 V
-7883.1519 8593.4326 -7882.8018 8597.3242 -7880.9961 8599.8506 C
-7884.4536 8592.333 -7879.2974 8577.3037 Y
-7877.9609 8572.5303 -7872.1274 8573.1016 -7869.1455 8573.7344 C
-7869.0718 8575.1289 -7868.8374 8576.9482 -7868.1318 8577.6553 C
-7867.2134 8575.6953 -7867.2358 8574.0732 V
-7866.0762 8573.7217 -7859.2817 8571.8447 -7856.4487 8575.3369 C
-7857.4312 8572.8135 -7859.8262 8572.0186 -7862.2007 8571.9189 C
-7861.6675 8571.6318 -7861.2041 8571.3047 -7860.8257 8570.9502 C
-7859.0415 8570.7861 -7856.7104 8569.5762 Y
-7854.9814 8568.8857 -7855.5015 8565.4307 Y
-7856.1919 8563.7021 -7853.5991 8564.3936 Y
-7851.7002 8564.9111 -7850.8354 8563.1836 Y
-7851.7002 8564.3936 -7852.3906 8563.5303 Y
f
-7846.9082 8597.9521 m
-7847.6074 8598.4893 -7848.7632 8598.0938 Y
-7851.2446 8599.3135 -7850.5327 8596.8457 Y
-7849.7695 8594.1104 -7850.5645 8590.1221 Y
-7850.5415 8586.6445 -7852.4014 8587.5596 Y
-7853.0342 8587.5557 L
-7853.3198 8585.6113 -7853.7046 8583.7549 -7854.0898 8582.1689 C
-7852.7129 8584.4199 -7851.2778 8585.0625 Y
-7849.5913 8586.082 -7847.9878 8581.5791 Y
-7848.4214 8580.4502 -7847.2417 8578.7021 Y
-7848.4937 8578.8125 -7849.7246 8581.876 Y
-7850.4976 8586.6152 -7851.3511 8583.4268 Y
-7852.5776 8581.1904 -7853.7695 8580.0098 -7854.8145 8579.4229 C
-7855.2026 8578.0625 -7855.4858 8577.2393 Y
-7855.7002 8576.4727 -7856.0337 8575.8486 -7856.4487 8575.3369 C
-7856.3799 8575.5127 -7856.3174 8575.6982 -7856.2632 8575.8906 C
-7850.3022 8593.2588 -7855.4858 8599.9971 V
-7862.2246 8609.5869 -7866.3721 8609.5869 V
-7869.9663 8609.6514 L
-7874.1138 8609.6514 -7880.8535 8600.0615 Y
-7880.9038 8599.9961 -7880.9463 8599.9209 -7880.9961 8599.8506 C
-7880.7378 8600.4141 -7880.4375 8600.9404 -7880.0752 8601.4092 C
-7873.3359 8611 -7869.1895 8611 V
-7865.5942 8610.9346 L
-7861.4482 8610.9346 -7854.7095 8601.3447 Y
-7852.5801 8598.5762 -7852.3306 8594.0176 -7852.7769 8589.6055 C
-7852.6553 8589.5752 -7852.5698 8589.5674 Y
-7851.0112 8587.6475 -7851.7598 8595.5244 Y
-7852.4746 8598.3789 -7850.7026 8599.2402 Y
-7849.9351 8600.0186 -7846.9946 8599.3418 Y
-7846.9136 8598.7256 -7845.4434 8598.5811 Y
-7844.7446 8598.0449 -7842.8921 8598.2881 Y
-7844.5024 8596.5762 -7846.9082 8597.9521 Y
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611 m
-7828.1875 8611 L
-7828.1875 8546.9023 L
-7893 8546.9023 L
-7893 8611 L
n
u
0 O
0 g
-7858.6978 8569.4297 m
-7860.6094 8546.9023 L
-7862.5215 8569.4297 L
-7861.9033 8569.3066 -7861.2642 8569.2402 -7860.6094 8569.2402 c
-7859.9551 8569.2402 -7859.3159 8569.3066 -7858.6978 8569.4297 C
f
-7870.2402 8577.3975 m
-7893 8579.3301 L
-7870.1138 8581.2734 L
-7870.2856 8580.5469 -7870.3848 8579.793 -7870.3848 8579.0156 c
-7870.3848 8578.4629 -7870.3281 8577.9248 -7870.2402 8577.3975 C
f
-7865.5195 8570.5723 m
-7879.1626 8561.8047 L
-7869.2153 8574.377 L
-7868.3574 8572.791 -7867.0718 8571.4766 -7865.5195 8570.5723 C
f
-7862.4814 8588.6074 m
-7860.5786 8611 L
-7858.6768 8588.5967 L
-7859.3018 8588.7227 -7859.9473 8588.791 -7860.6094 8588.791 c
-7861.25 8588.791 -7861.8735 8588.7246 -7862.4814 8588.6074 C
f
-7850.9609 8580.5068 m
-7828.1875 8578.5723 L
-7851.0835 8576.6289 L
-7851.0835 8576.8506 L
-7850.9258 8577.5488 -7850.8345 8578.2695 -7850.8345 8579.0156 c
-7850.8345 8579.5234 -7850.8848 8580.0186 -7850.9609 8580.5068 C
f
-7869.1138 8583.8262 m
-7879.1641 8596.5293 L
-7865.2778 8587.6055 L
-7866.8823 8586.7305 -7868.2114 8585.416 -7869.1138 8583.8262 C
f
-7851.9961 8574.3945 m
-7841.8755 8561.6055 L
-7855.7666 8570.5313 L
-7854.1768 8571.4414 -7852.8633 8572.7793 -7851.9961 8574.3945 C
f
-7855.6895 8587.4512 m
-7841.8735 8596.3281 L
-7851.9658 8583.5723 L
-7852.8198 8585.1895 -7854.1152 8586.5313 -7855.6895 8587.4512 C
f
-7851.8887 8583.6133 m
-7851.3862 8582.6641 -7851.0435 8581.6201 -7850.8755 8580.5186 c
-7850.7993 8580.0293 -7850.7485 8579.5273 -7850.7485 8579.0156 c
-7850.7485 8578.2637 -7850.8398 8577.5352 -7850.9985 8576.8311 c
-7851.1958 8575.957 -7851.5049 8575.124 -7851.9185 8574.3545 c
-7852.7954 8572.7246 -7854.1191 8571.374 -7855.7241 8570.4561 c
-7856.6294 8569.9375 -7857.6226 8569.5537 -7858.6802 8569.3457 c
-7859.3047 8569.2207 -7859.9497 8569.1514 -7860.6094 8569.1514 c
-7861.2695 8569.1514 -7861.9155 8569.2207 -7862.5391 8569.3457 c
-7863.6235 8569.5605 -7864.6382 8569.957 -7865.5625 8570.4961 c
-7867.1313 8571.4102 -7868.4282 8572.7354 -7869.2915 8574.335 c
-7869.7969 8575.2695 -7870.1455 8576.2969 -7870.3262 8577.3818 c
-7870.4155 8577.916 -7870.4727 8578.459 -7870.4727 8579.0156 c
-7870.4727 8579.8008 -7870.3711 8580.5605 -7870.1978 8581.293 c
-7869.9814 8582.207 -7869.6406 8583.0732 -7869.1875 8583.8701 c
-7868.2793 8585.4727 -7866.9395 8586.8008 -7865.3174 8587.6826 c
-7864.4487 8588.1553 -7863.5 8588.498 -7862.4961 8588.6934 c
-7861.8848 8588.8105 -7861.2554 8588.877 -7860.6094 8588.877 c
-7859.9414 8588.877 -7859.29 8588.8086 -7858.6602 8588.6826 c
-7857.5786 8588.4668 -7856.5664 8588.0654 -7855.6455 8587.5273 c
-7854.0566 8586.5977 -7852.7515 8585.2441 -7851.8887 8583.6133 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 3)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7883.75 8612 m
-7883.75 8588 L
-7893.75 8588 L
-7893.75 8612 L
-7883.75 8612 L
n
u
u
0 Ap
0 O
1 g
-7884.4058 8603.5361 m
-7883.9878 8602.4346 -7883.75 8601.2471 -7883.75 8600 c
-7883.75 8598.1377 -7884.2681 8596.3994 -7885.1543 8594.9072 c
-7886.8975 8591.9736 -7890.0898 8590 -7893.75 8590 C
-7893.75 8610 L
-7893.4297 8610 -7893.1143 8609.9814 -7892.8018 8609.9521 c
-7890.9121 8609.7754 -7889.1807 8609.0645 -7887.7441 8607.9824 c
-7886.2471 8606.8545 -7885.0801 8605.3184 -7884.4058 8603.5361 c
f
0 R
0 G
1 J 1 j 0.5 w-7893.75 8590.3174 m
-7890.7207 8591.2744 -7887.8926 8592.9326 -7885.1543 8594.9072 C
S
-7893.75 8595.9512 m
-7890.5991 8598.3564 -7887.5435 8601.0869 -7884.4058 8603.5361 C
S
-7887.7441 8607.9824 m
-7889.8105 8606.8906 -7891.7993 8605.5342 -7893.75 8604.043 C
S
-7892.8018 8609.9521 m
-7893.1191 8609.8682 -7893.4375 8609.7852 -7893.75 8609.6865 C
S
-7887.7441 8607.9824 m
-7889.1807 8609.0645 -7890.9121 8609.7744 -7892.8018 8609.9521 C
S
-7884.4058 8603.5361 m
-7883.9878 8602.4346 -7883.75 8601.2471 -7883.75 8600 c
-7883.75 8598.1377 -7884.2681 8596.3994 -7885.1543 8594.9072 C
S
-7893.75 8610 m
-7893.4297 8610 -7893.1143 8609.9814 -7892.8018 8609.9521 C
S
-7887.7441 8607.9824 m
-7886.2471 8606.8545 -7885.0801 8605.3184 -7884.4058 8603.5361 C
S
-7885.1543 8594.9072 m
-7886.8975 8591.9736 -7890.0898 8590 -7893.75 8590 C
S
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 34)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893.0254 8611.0264 m
-7837.0542 8611.0264 L
-7837.0542 8549.5342 L
-7893.0254 8549.5342 L
-7893.0254 8611.0264 L
n
u
u
0 O
0.0745 0.9 0.9019 0.18 k
0 R
0 0 0 1 K
1 J 1 j 0.0518 w-7866.5991 8587.7217 m
-7866.3594 8598.5215 -7871.8794 8608.8398 v
-7871.4009 8611 -7869.9595 8611 v
-7870.2002 8607.6406 -7869.2393 8607.1602 v
-7864.9199 8595.1602 -7865.6382 8587.2402 v
-7866.5991 8587.7217 l
b
-7866.5991 8587.7217 m
-7868.2793 8593 -7880.0391 8594.2012 v
-7884.3594 8594.6807 -7884.5991 8596.1201 v
-7878.1206 8586.5186 -7877.1602 8586.7607 v
-7890.3594 8581.001 -7893 8575.7197 v
-7887.9595 8578.6006 -7884.5991 8576.4395 v
-7876.6802 8576.2012 -7871.6406 8578.3613 v
-7867.8008 8580.2813 -7875.7202 8564.2012 v
-7871.8794 8575.9609 -7868.2793 8549.5605 v
-7867.3198 8554.8408 -7865.8799 8556.2813 v
-7859.8799 8563.9609 -7860.8398 8566.1201 v
-7861.3198 8569.9609 -7856.7598 8563.7207 v
-7857 8573.3213 -7859.4009 8576.6807 v
-7861.5591 8580.2813 -7855.5591 8578.1201 v
-7849.5591 8576.2012 -7844.2793 8577.8809 v
-7838.7598 8579.3193 -7837.0801 8576.4395 v
-7848.8398 8588.9209 -7854.5991 8588.6807 v
-7852.9194 8592.2813 l
-7850.5195 8597.0811 -7851 8598.2813 v
-7866.2681 8588.8828 -7866.5991 8587.7217 v
b
-7866.5991 8587.7217 m
-7863.9595 8569.2402 -7866.5991 8561.5605 v
-7868.9985 8551.001 -7868.2793 8549.5605 v
S
-7865.1602 8576.4395 m
-7859.1602 8571.6406 -7857.9595 8566.3594 v
S
-7865.1602 8575.7197 m
-7874.0391 8568.041 -7875.7202 8564.2012 v
S
-7837.0801 8576.4395 m
-7838.2793 8578.6006 -7866.3594 8586.7607 y
-7871.4009 8581.2422 -7882.9199 8578.8408 v
-7890.5986 8577.8809 -7893 8575.7197 v
S
-7883.6382 8594.6807 m
-7872.1191 8585.5615 -7866.3594 8586.7607 y
-7852.1992 8593 -7851 8598.2813 v
S
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 36)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7892.8496 8610.9961 m
-7842.96 8610.9961 L
-7842.96 8559.9258 L
-7892.8496 8559.9258 L
-7892.8496 8610.9961 L
n
u
0 O
0.025 0.1 0.475 0 k
-7871.1504 8578.9033 m
-7873.4766 8577.8125 -7875.6914 8577.4434 -7877.3735 8577.9238 c
-7878.0518 8578.1162 -7878.6455 8578.4473 -7879.1235 8578.9238 c
-7879.6006 8579.4023 -7879.9297 8579.9951 -7880.1235 8580.6729 c
-7881.0088 8583.7705 -7879.0103 8588.6777 -7874.9233 8592.7666 c
-7870.8345 8596.8535 -7865.9297 8598.8506 -7862.8286 8597.9658 c
-7862.1519 8597.7705 -7861.5586 8597.4424 -7861.0806 8596.9658 c
-7860.6035 8596.4873 -7860.2754 8595.8945 -7860.0825 8595.2168 c
-7859.5176 8593.2461 -7860.1226 8590.5449 -7861.6855 8587.7891 c
-7862.5825 8586.21 -7863.7915 8584.6133 -7865.2793 8583.123 c
-7867.1504 8581.2529 -7869.1914 8579.8242 -7871.1504 8578.9033 c
f
u
0.0035 0.014 0.0665 0 k
-7870.2183 8577.9727 m
-7872.8306 8577.0215 -7875.3975 8576.9688 -7877.3735 8577.9238 C
-7875.6914 8577.4434 -7873.4766 8577.8125 -7871.1504 8578.9033 c
-7870.6191 8579.1543 -7870.0806 8579.4434 -7869.5435 8579.7676 C
-7867.8984 8579.0537 L
-7868.6675 8578.6172 -7869.4434 8578.2529 -7870.2183 8577.9727 c
f
0.015 0.06 0.285 0 k
-7867.8984 8579.0537 m
-7869.5435 8579.7676 L
-7868.0962 8580.6348 -7866.6426 8581.7607 -7865.2793 8583.123 c
-7865.1538 8583.25 -7865.0327 8583.377 -7864.9102 8583.5059 C
-7864.2153 8581.8633 L
-7865.3706 8580.7227 -7866.6191 8579.7813 -7867.8984 8579.0537 C
f
U
u
0.039 0.156 0.741 0 k
-7858.6875 8566.4033 m
-7858.9746 8566.6914 -7870.2183 8577.9727 Y
-7869.4434 8578.2529 -7868.6675 8578.6172 -7867.8984 8579.0537 C
-7854.4146 8565.5703 L
-7856.0615 8565.0986 -7857.6406 8565.3555 -7858.6875 8566.4033 c
f
0.025 0.1 0.475 0 k
-7854.4146 8565.5703 m
-7867.8984 8579.0537 L
-7866.5845 8579.8018 -7865.2969 8580.7754 -7864.1143 8581.957 c
-7864.0845 8581.9863 -7864.0586 8582.0156 -7864.0278 8582.0449 C
-7850.3408 8568.3574 L
-7850.5264 8568.1328 -7850.7202 8567.9141 -7850.9302 8567.7002 c
-7852.0103 8566.623 -7853.2305 8565.9082 -7854.4146 8565.5703 C
f
U
u
0.0115 0.046 0.2185 0 k
-7844.9346 8575.3926 m
-7842.5337 8572.9893 -7842.3354 8569.0898 -7844.1382 8565.6973 C
-7845.2954 8566.1182 L
-7843.0938 8569.4961 -7842.8398 8573.2949 -7844.9346 8575.3926 c
f
0.015 0.06 0.285 0 k
-7852.5337 8560.5957 m
-7851.5825 8559.9258 L
-7854.2046 8559.3516 -7856.8306 8559.9141 -7858.6206 8561.7061 c
-7857.1719 8560.2578 -7854.9082 8559.9307 -7852.5337 8560.5957 C
f
0.0295 0.118 0.5605 0 k
-7852.5337 8560.5957 m
-7854.9082 8559.9307 -7857.1719 8560.2578 -7858.6206 8561.7061 c
-7860.0195 8563.1055 -7860.3706 8565.2637 -7859.7954 8567.5469 C
-7857.8672 8564.5449 -7854.4082 8565.5537 V
-7852.5854 8560.6309 L
-7852.5337 8560.5957 L
f
*u
1 D
0.048 0.192 0.912 0 k
-7844.9346 8575.3926 m
-7846.2817 8576.7383 -7848.3325 8577.1133 -7850.5234 8576.627 C
-7860.6714 8586.7734 L
-7860.7695 8586.5674 -7860.7695 8586.5674 -7860.6714 8586.7734 c
-7859.2246 8589.8145 -7858.9702 8592.916 -7860.0825 8595.2168 C
-7859.5176 8593.2461 -7860.1226 8590.5449 -7861.6855 8587.7891 c
-7862.5054 8586.3438 -7863.5918 8584.8848 -7864.9102 8583.5059 C
-7864.2153 8581.8633 L
-7864.1816 8581.8945 -7864.1465 8581.9238 -7864.1143 8581.957 c
-7864.0845 8581.9873 -7864.0566 8582.0176 -7864.0273 8582.0469 c
-7864.0278 8582.0469 -7864.0278 8582.0469 -7864.0278 8582.0449 C
-7850.3408 8568.3574 L
-7845.3262 8566.1289 L
-7845.2954 8566.1182 L
-7843.0938 8569.4961 -7842.8398 8573.2949 -7844.9346 8575.3926 c
f
*U
0 D
0.0215 0.086 0.4085 0 k
-7851.5825 8559.9258 m
-7852.5337 8560.5957 L
-7850.6846 8561.1113 -7848.7656 8562.2285 -7847.1138 8563.8828 c
-7846.4063 8564.5889 -7845.7998 8565.3418 -7845.2954 8566.1182 C
-7844.1382 8565.6973 L
-7844.6553 8564.7246 -7845.3374 8563.793 -7846.1802 8562.9512 c
-7847.7695 8561.3594 -7849.6758 8560.3418 -7851.5825 8559.9258 C
f
0.0205 0.082 0.3895 0 k
-7845.2954 8566.1182 m
-7845.7998 8565.3418 -7846.4063 8564.5889 -7847.1138 8563.8828 c
-7848.7656 8562.2285 -7850.6846 8561.1113 -7852.5337 8560.5957 C
-7852.5854 8560.6309 L
-7854.4082 8565.5537 L
-7853.2114 8565.9209 -7851.9878 8566.6426 -7850.9302 8567.7002 c
-7850.7202 8567.9141 -7850.5264 8568.1328 -7850.3408 8568.3574 C
-7845.3262 8566.1289 L
-7845.2954 8566.1182 L
f
U
u
0.445 0.356 0.267 0 k
-7892.8496 8610.9961 m
-7870.9575 8587.9688 L
-7871.2007 8587.6494 -7871.5752 8587.6133 -7871.8887 8587.6592 C
-7876.1802 8592.2891 -7887.3145 8604.4561 -7891.7266 8609.2793 C
-7892.5649 8610.3516 -7893 8610.9932 -7892.8496 8610.9961 C
f
0.15 0.12 0.09 0 k
-7892.8345 8610.9961 m
-7891.6606 8610.7031 -7870.6934 8589.0029 Y
-7870.6934 8588.502 -7870.7993 8588.1758 -7870.9575 8587.9688 C
-7892.8496 8610.9961 L
-7892.8442 8610.9961 -7892.8418 8611 -7892.8345 8610.9961 c
f
0.2 0.16 0.12 0 k
-7891.7266 8609.2793 m
-7887.3145 8604.4561 -7876.1802 8592.2891 -7871.8887 8587.6592 C
-7872.2002 8587.7041 -7872.4526 8587.8301 Y
-7873.6035 8588.1328 -7887.5742 8603.9609 -7891.7266 8609.2793 C
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 37)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7891.9502 8610.2314 m
-7842.0391 8610.2314 L
-7842.0391 8546.1152 L
-7891.9502 8546.1152 L
-7891.9502 8610.2314 L
n
u
0 O
0 0 0 1 k
0 R
0 0 0 1 K
0 w-7842.2358 8546.1152 m
-7842.6064 8546.248 -7842.9858 8546.2832 -7843.3833 8546.2031 c
-7843.4863 8546.168 l
-7843.5254 8546.1602 -7843.5703 8546.1777 -7843.6025 8546.1992 c
-7843.9434 8546.3926 l
-7847.7129 8548.2959 -7851.0962 8550.8965 -7853.5 8554.4473 c
-7854.9634 8556.5918 -7856.1235 8558.8789 -7857.7993 8560.8555 c
-7858.1729 8561.209 -7858.1758 8561.7725 -7857.8345 8562.1309 c
-7857.4951 8562.501 -7856.9185 8562.5078 -7856.5615 8562.165 c
-7856.4038 8562.21 l
-7856.2642 8562.1289 -7856.0742 8562.0703 -7856.0234 8561.957 c
-7854.8535 8559.2031 -7854.1895 8556.5137 -7852.4336 8554.1387 c
-7850.1719 8551.0938 -7847.1777 8548.9941 -7844.0298 8547.0234 c
-7843.3672 8546.6055 L
-7843.4966 8546.6348 L
-7842.7695 8546.6426 l
-7842.7915 8546.6113 -7842.8008 8546.5957 -7842.8223 8546.5645 C
-7842.6064 8546.5234 -7842.3774 8546.4746 -7842.1626 8546.4336 c
-7842.0762 8546.4238 -7842.0186 8546.3389 -7842.0391 8546.2383 c
-7842.0503 8546.1514 -7842.1382 8546.1084 -7842.2358 8546.1152 c
-7842.2358 8546.1152 l
b
-7858.2222 8559.9951 m
-7858.5742 8559.8066 -7858.9658 8559.6719 -7859.2485 8559.3887 c
-7865.4521 8553.1719 -7875.6802 8552.2734 -7883.0488 8558.6855 C
-7883.1582 8558.7813 -7883.1582 8558.957 -7883.0635 8559.0645 C
-7880.0527 8557.9434 -7871.8838 8559.375 -7868.3223 8562.4121 C
-7868.2534 8562.4668 -7868.1465 8562.4521 -7868.1055 8562.3711 C
-7868.0503 8562.3047 -7868.0664 8562.1953 -7868.1328 8562.1563 C
-7871.5625 8559.085 -7876.0674 8557.29 -7880.6729 8557.748 C
-7877.8535 8556.1855 -7874.6313 8555.4941 -7871.3984 8555.6885 c
-7866.7144 8555.9717 -7862.4634 8558.1191 -7858.3711 8560.2793 c
-7858.2915 8560.3193 -7858.1978 8560.293 -7858.1553 8560.2109 C
-7858.1016 8560.1309 -7858.1426 8560.0352 -7858.2222 8559.9951 c
b
-7867.6475 8561.3359 m
-7869.2266 8565.3613 -7871.3911 8569.3193 -7874.8018 8572.0762 c
-7874.9648 8572.2119 -7874.9946 8572.4492 -7874.8711 8572.6055 c
-7874.7344 8572.7676 -7874.5049 8572.7793 -7874.3481 8572.6563 c
-7870.1235 8570.5967 -7867.1904 8566.1309 -7867.1626 8561.4014 c
-7867.1626 8561.4014 l
-7867.1328 8561.2666 -7867.2354 8561.1338 -7867.3633 8561.1221 c
-7867.5039 8561.1055 -7867.6318 8561.1973 -7867.6475 8561.3359 c
-7867.6475 8561.3359 l
b
-7861.9414 8566.0176 m
-7862.0425 8566.1816 -7862.1152 8566.3838 -7862.2617 8566.4824 c
-7865.0806 8568.3906 -7867.9785 8569.6309 -7870.8848 8571.1328 c
-7871.0503 8571.209 -7871.1118 8571.418 -7871.0313 8571.5703 c
-7870.9512 8571.7227 -7870.7559 8571.7793 -7870.5898 8571.7041 c
-7867.4395 8570.3232 -7863.3135 8569.5 -7861.6729 8566.1797 c
-7861.6289 8566.1113 -7861.6455 8566.0146 -7861.7266 8565.9648 c
-7861.7959 8565.9199 -7861.8975 8565.9482 -7861.9414 8566.0176 c
-7861.9414 8566.0176 l
b
-7861.6602 8566.918 m
-7861.4438 8567.4297 -7861.1431 8567.8896 -7861.0503 8568.4346 c
-7860.2183 8573.2773 -7860.1152 8578.042 -7861.2485 8582.6865 c
-7861.2485 8582.6865 l
-7861.3418 8582.9521 -7861.2114 8583.2441 -7860.9438 8583.3389 c
-7860.6777 8583.4336 -7860.3882 8583.3125 -7860.2935 8583.0479 c
-7858.2935 8577.8105 -7858.8975 8571.7373 -7861.3711 8566.7832 c
-7861.4063 8566.7002 -7861.4985 8566.6689 -7861.5825 8566.6914 c
-7861.6641 8566.7266 -7861.6978 8566.835 -7861.6602 8566.918 c
-7861.6602 8566.918 l
b
-7860.5352 8582.5938 m
-7857.8984 8580.2266 -7855.6816 8577.252 -7854.8535 8573.7354 c
-7854.8535 8573.7354 l
-7854.7246 8573.1816 -7855.0742 8572.623 -7855.6416 8572.4902 c
-7856.1992 8572.375 -7856.7578 8572.7246 -7856.8862 8573.2793 c
-7857.5649 8576.5313 -7858.8711 8579.6729 -7860.7954 8582.3857 c
-7860.7954 8582.3857 l
-7860.8462 8582.4551 -7860.8345 8582.5576 -7860.7695 8582.6201 c
-7860.6992 8582.6689 -7860.5977 8582.6582 -7860.5352 8582.5938 c
-7860.5352 8582.5938 l
b
-7845.3711 8575.1826 m
-7846.7114 8570.8301 -7849.2598 8567.0693 -7852.6895 8564.1533 C
-7852.7295 8564.0723 -7852.8242 8564.0322 -7852.9038 8564.085 C
-7852.9863 8564.127 -7853.0122 8564.2207 -7852.9722 8564.3018 C
-7852.9575 8564.7891 -7852.7144 8565.2334 -7852.4458 8565.5313 c
-7847.4063 8571.1621 -7843.9902 8579.7197 -7846.3433 8586.9551 C
-7846.0762 8581.4512 -7847.7241 8575.3008 -7851.1362 8570.6738 c
-7852.1606 8569.2695 -7853.7422 8569.1201 -7855.3081 8569.2031 C
-7855.4023 8569.1895 -7855.4834 8569.2432 -7855.4961 8569.3369 c
-7855.5098 8569.4189 -7855.4551 8569.5137 -7855.3623 8569.5254 C
-7852.1479 8570.7695 -7850.4878 8574.2246 -7849.0845 8577.1943 c
-7847.4155 8580.7441 -7846.7017 8584.6377 -7847.0054 8588.5 C
-7847.0454 8588.6777 -7847.1138 8590.3975 -7846.9775 8590.4102 C
-7846.8306 8590.4395 -7846.7095 8590.3438 -7846.6802 8590.1943 C
-7846.6455 8590.0449 -7843.6426 8580.7979 -7845.3711 8575.1826 c
b
-7853.4863 8562.4912 m
-7852.3945 8558.6201 -7850.1094 8555.251 -7847.4824 8552.2383 c
-7847.3306 8552.1045 -7847.3145 8551.8857 -7847.4502 8551.7354 c
-7847.5752 8551.6006 -7847.8047 8551.582 -7847.9575 8551.7178 c
-7851.3306 8554.332 -7852.4487 8558.541 -7853.7954 8562.375 c
-7853.7954 8562.375 l
-7853.8262 8562.4648 -7853.7754 8562.5586 -7853.6982 8562.5869 c
-7853.6094 8562.6191 -7853.5166 8562.5674 -7853.4863 8562.4912 c
-7853.4863 8562.4912 l
b
-7847.5313 8587.1094 m
-7847.5991 8587.0566 -7847.7075 8587.083 -7847.7485 8587.1504 C
-7847.9634 8587.4746 -7849.6914 8589.5186 -7850.3926 8590.1406 c
-7855.1719 8594.3945 -7858.5137 8598.9609 -7866.5391 8602.7227 c
-7873.4512 8605.9639 -7876.1113 8608.5957 -7883.3862 8606.8262 c
-7886.6875 8606.0293 -7888.0313 8605.5313 -7889.4351 8600.4551 C
-7890.9473 8594.2988 -7889.8672 8596.7832 -7890.0845 8589.4385 c
-7890.2222 8584.6973 -7893 8573.4551 -7880.5254 8559.2598 C
-7880.4199 8559.1484 -7880.4336 8558.9961 -7880.5337 8558.9072 C
-7880.6328 8558.8018 -7880.7959 8558.8154 -7880.8862 8558.916 C
-7886.5786 8563.7168 -7890.0234 8570.6582 -7891.3145 8577.9424 c
-7892.2871 8583.4668 -7891.9199 8588.25 -7891.6665 8594.6367 c
-7891.5688 8597.0938 -7892.6855 8604.0723 -7887.9102 8608.0625 c
-7884.3926 8611 -7879.3911 8610.5469 -7875.3545 8609.1563 c
-7869.6992 8607.2119 -7864.9727 8604.1465 -7859.8711 8600.6094 c
-7856.2656 8598.125 -7848.2881 8588.2842 -7847.4785 8587.3262 C
-7847.4351 8587.2588 -7847.4502 8587.1504 -7847.5313 8587.1094 C
b
-7882.0503 8574.3057 m
-7881.1685 8573.5029 -7880.7017 8574.8457 -7880.4297 8575.6016 c
-7880.1626 8576.3574 -7879.1895 8576.25 -7879.5127 8576.5723 c
-7879.8369 8576.8975 -7879.8369 8576.9521 -7880.3232 8576.5186 c
-7880.8086 8576.0879 -7880.8086 8576.7354 -7881.5649 8576.25 c
-7882.3198 8575.7617 -7882.6455 8574.8457 -7882.0503 8574.3057 c
b
-7874.6519 8578.9482 m
-7874.3657 8578.5918 -7873.6802 8578.5723 -7873.4648 8578.8945 c
-7873.25 8579.2197 -7872.3306 8579.2734 -7872.4937 8579.5967 c
-7872.6543 8579.9209 -7872.6016 8580.1377 -7873.0874 8579.9209 c
-7873.5737 8579.7041 -7873.4121 8580.2998 -7873.8975 8580.084 c
-7874.3833 8579.8672 -7874.8687 8579.2197 -7874.6519 8578.9482 c
b
-7866.6074 8584.0791 m
-7866.1206 8583.7559 -7864.8794 8584.5117 -7865.4727 8584.5117 c
-7866.0674 8584.5117 -7865.3115 8585.2666 -7865.8521 8585.4834 c
-7866.3906 8585.6992 -7866.2832 8585.4297 -7866.6074 8585.6445 c
-7866.9297 8585.8613 -7867.3633 8586.2393 -7867.5239 8585.4297 c
-7867.6855 8584.6191 -7867.3633 8584.6191 -7866.9849 8584.3496 c
-7866.6074 8584.0791 -7866.6074 8584.0791 y
b
-7881.2402 8584.3496 m
-7880.1074 8584.2422 -7880.8633 8584.998 -7880.2695 8585.4834 c
-7879.6738 8585.9697 -7878.9185 8586.6172 -7879.7295 8586.3994 c
-7880.5391 8586.1855 -7881.9961 8586.6719 -7881.9434 8585.5381 c
-7881.8887 8584.4033 -7881.6328 8584.3857 -7881.2402 8584.3496 c
b
-7875.5703 8592.6113 m
-7875.1016 8592.3438 -7875.6802 8592.7197 -7875.0303 8592.6113 c
-7874.3833 8592.5039 -7873.7886 8592.6113 -7874.2207 8592.8281 c
-7874.6519 8593.0439 -7875.3008 8593.1514 -7875.4634 8592.9893 c
-7875.6255 8592.8281 -7875.9473 8592.8281 -7875.5703 8592.6113 c
b
-7866.0674 8592.1797 m
-7866.4785 8591.1797 -7865.0962 8591.4238 -7864.4473 8591.7461 c
-7863.7998 8592.0723 -7862.8262 8591.4775 -7863.4209 8591.9102 c
-7864.0137 8592.3418 -7863.7998 8591.9102 -7864.3926 8592.2334 c
-7864.9873 8592.5566 -7865.6895 8593.0977 -7866.0674 8592.1797 c
b
-7881.6738 8598.0664 m
-7881.7222 8597.0752 -7880.8086 8597.957 -7880.2695 8598.0117 c
-7879.7295 8598.0664 -7879.0801 8598.0664 -7879.2432 8598.2813 c
-7879.4038 8598.498 -7879.4595 8598.498 -7880.1626 8598.7129 c
-7880.8633 8598.9297 -7881.6191 8599.1445 -7881.6738 8598.0664 c
b
-7882.1582 8592.6113 m
-7883.0664 8592.9746 -7883.2935 8592.8809 -7883.5625 8593.2041 c
-7883.8345 8593.5293 -7884.1558 8594.2314 -7884.5352 8593.0977 c
-7884.9121 8591.9629 -7884.4282 8590.7754 -7884.0479 8590.9375 c
-7883.6714 8591.0986 -7883.2935 8591.7461 -7882.8618 8591.9629 c
-7882.4297 8592.1797 -7881.6191 8592.3945 -7882.1582 8592.6113 c
b
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 41)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611 m
-7812 8611 L
-7812 8506 L
-7893 8506 L
-7893 8611 L
n
u
u
u
0 O
0 0 0 1 k
-7874.8057 8523.4258 m
-7875.0742 8521.6621 -7876.1602 8520.291 -7877.5239 8520.3965 c
-7878.8862 8520.502 -7879.7075 8522.0234 -7879.7432 8523.8066 c
-7879.7485 8524.0693 -7879.6743 8525.2441 -7879.6304 8525.4775 C
-7879.6382 8525.582 -7879.6191 8525.6738 -7879.6104 8525.7793 c
-7879.5142 8527.0254 -7878.3574 8528.3594 -7876.9414 8528.25 c
-7875.5249 8528.1406 -7874.4897 8526.8613 -7874.6367 8525.4727 c
-7874.6445 8525.4072 -7874.6958 8524.626 -7874.7075 8524.5625 C
-7874.6816 8524.2842 -7874.7598 8523.7256 -7874.8057 8523.4258 c
f
-7885.2646 8532.7334 m
-7885.9946 8540.916 -7880.5015 8540.1191 v
-7877.3682 8539.0186 -7878.4414 8536.1201 v
-7878.6426 8534.752 -7880.7847 8533.498 v
-7881.1465 8533.25 -7881.7632 8532.1016 v
-7882.1294 8530.5977 -7883.5186 8530.2979 v
-7885.0762 8530.251 -7885.2646 8532.7334 v
f
-7859.7646 8541.4971 m
F
-7859.0762 8539.3408 m
-7859.7847 8538.1934 -7862.8848 8538.6279 Y
-7863.8115 8538.6885 -7864.3799 8538.1113 Y
-7866.8394 8534.0918 -7870.0386 8534.8857 -7870.4082 8534.9932 C
-7870.4097 8534.9863 L
-7873.9995 8535.6045 -7874.2666 8540.6025 V
-7874.4912 8541.3818 -7875.3354 8541.7695 V
-7878.2695 8542.8613 -7878.3481 8544.208 V
-7878.8999 8546.1152 -7876.6006 8546.7422 V
-7874.6792 8547.2568 -7872.7886 8544.8945 V
-7871.6113 8543.6797 -7868.5762 8542.9395 V
-7868.5728 8542.9521 L
-7865.3594 8542.0449 -7863.6392 8542.5889 Y
-7860.8521 8543.7676 -7859.4063 8542.4014 Y
-7857.6826 8540.7559 -7859.0762 8539.3408 Y
f
-7872.9834 8522.8789 m
-7873.5854 8521.2002 -7873.2822 8519.4775 -7872.0327 8518.9229 c
-7870.7842 8518.3672 -7869.3384 8519.3164 -7868.4585 8520.8672 c
-7868.3286 8521.0957 -7867.8359 8522.165 -7867.7632 8522.3906 C
-7867.7065 8522.4785 -7867.6792 8522.5674 -7867.6362 8522.667 c
-7867.1289 8523.8086 -7867.5122 8525.5303 -7868.8105 8526.1074 c
-7870.1089 8526.6855 -7871.6279 8526.0527 -7872.1582 8524.7617 c
-7872.1831 8524.7002 -7872.5078 8523.9873 -7872.5298 8523.9258 C
-7872.6831 8523.6953 -7872.8809 8523.166 -7872.9834 8522.8789 c
f
-7858.7129 8525.9307 m
-7854.1802 8532.7822 -7859.3911 8534.6943 v
-7862.6714 8535.2168 -7863.1035 8532.1563 v
-7863.5786 8530.8555 -7862.29 8528.7354 v
-7862.0903 8528.3447 -7862.0938 8527.04 v
-7862.4858 8525.5449 -7861.4082 8524.6182 v
-7860.0591 8523.8359 -7858.7129 8525.9307 v
f
U
u
-7833.7358 8575.1074 m
-7833.3687 8573.3623 -7833.9048 8571.6953 -7835.2183 8571.3164 c
-7836.5322 8570.9375 -7837.8345 8572.0752 -7838.4937 8573.7324 c
-7838.5903 8573.9775 -7838.9326 8575.1025 -7838.9746 8575.3369 C
-7839.0176 8575.4326 -7839.0322 8575.5244 -7839.0625 8575.6279 c
-7839.4087 8576.8271 -7838.7935 8578.4805 -7837.4282 8578.875 c
-7836.0635 8579.2695 -7834.6455 8578.4365 -7834.2969 8577.085 c
-7834.2793 8577.0205 -7834.0552 8576.2705 -7834.0425 8576.207 C
-7833.9214 8575.9551 -7833.7983 8575.4053 -7833.7358 8575.1074 c
f
-7847.2705 8579.6172 m
-7850.8242 8587.0234 -7845.3999 8588.2061 v
-7842.0801 8588.2754 -7842.0688 8585.1846 v
-7841.7778 8583.8311 -7843.3433 8581.9072 v
-7843.5942 8581.5449 -7843.7695 8580.2529 v
-7843.5854 8578.7178 -7844.7793 8577.9482 v
-7846.2222 8577.3594 -7847.2705 8579.6172 v
f
-7826.4648 8596.7695 m
F
-7825.0635 8594.9912 m
-7825.3247 8593.6689 -7828.3799 8592.9873 Y
-7829.27 8592.7197 -7829.5986 8591.9785 Y
-7830.4922 8587.3535 -7833.7666 8586.9746 -7834.1494 8586.9453 C
-7834.1494 8586.9395 L
-7837.7271 8586.2588 -7839.7314 8590.8457 V
-7840.2153 8591.4961 -7841.1416 8591.5625 V
-7844.2725 8591.5557 -7844.8169 8592.7891 V
-7846.0039 8594.3809 -7844.0713 8595.7754 V
-7842.4526 8596.9307 -7839.8535 8595.3818 V
-7838.3242 8594.6582 -7835.2222 8595.0293 V
-7835.2231 8595.042 L
-7831.8965 8595.3213 -7830.4766 8596.4326 Y
-7828.2793 8598.5146 -7826.4463 8597.7432 Y
-7824.2554 8596.8057 -7825.0635 8594.9912 Y
f
-7831.8374 8575.2354 m
-7831.8135 8573.4512 -7830.9258 8571.9453 -7829.5601 8571.8633 c
-7828.1943 8571.7793 -7827.1743 8573.1768 -7826.8955 8574.9385 c
-7826.8545 8575.1973 -7826.7666 8576.3711 -7826.7778 8576.6094 C
-7826.7559 8576.7109 -7826.7617 8576.8037 -7826.7559 8576.9121 c
-7826.6807 8578.1592 -7827.6445 8579.6367 -7829.0625 8579.7217 c
-7830.4814 8579.8066 -7831.6826 8578.6826 -7831.7246 8577.2871 c
-7831.7271 8577.2217 -7831.7822 8576.4395 -7831.7798 8576.375 C
-7831.8433 8576.1045 -7831.8423 8575.54 -7831.8374 8575.2354 c
f
-7820.0186 8582.5625 m
-7818.1777 8590.5674 -7823.7271 8590.5303 v
-7826.9834 8589.8682 -7826.3154 8586.8506 v
-7826.3032 8585.4668 -7824.3535 8583.9326 v
-7824.0278 8583.6377 -7823.5742 8582.415 v
-7823.4175 8580.876 -7822.0835 8580.3877 v
-7820.5454 8580.1279 -7820.0186 8582.5625 v
f
U
U
1 Ap
-7893 8611 m
-7893 8506 L
-7812 8506 L
-7812 8611 L
-7893 8611 L
n
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 42)0 A
u
0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7866.4609 8584.085 m
-7894 8584.085 L
-7894 8611.624 L
-7866.4609 8611.624 L
-7866.4609 8584.085 L
n
0 O
0 0.55 1 0.12 k
-7880.7598 8602.3623 m
-7880.7598 8612 L
-7879.6343 8612 L
-7879.6343 8602.3623 L
-7880.7598 8602.3623 L
f
0 0.55 1 0.3 k
-7884.4233 8597.876 m
-7883.3096 8596.1553 -7879.8809 8594.457 -7875.4966 8594.457 c
-7871.1152 8594.457 -7867.6138 8596.1064 -7866.5718 8597.874 C
-7866.5718 8597.874 L
-7867.6138 8599.6006 -7871.1152 8601.2979 -7875.4966 8601.2979 c
-7879.8755 8601.2979 -7883.3242 8599.5615 -7884.4233 8597.876 C
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 45)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7894 8568.918 m
-7894 8612 L
-7807.2217 8612 L
-7807.2217 8568.918 L
-7894 8568.918 L
n
u
u
0 O
0 0 0 1 k
-7834.2217 8598.2354 m
-7834.2217 8606.0742 L
-7822.2217 8599.1445 L
-7810.2217 8592.2168 L
-7822.2217 8585.2891 L
-7834.2217 8578.3613 L
-7834.2217 8586.4824 L
-7892.9351 8572.7168 L
-7879.9878 8591.8018 L
-7894 8612 L
-7834.2217 8598.2354 L
f
0 1 1 0.1 k
0 R
0 0 0 1 K
-7832.2217 8595.2354 m
-7832.2217 8603.0742 L
-7820.2217 8596.1445 L
-7808.2217 8589.2168 L
-7820.2217 8582.2891 L
-7832.2217 8575.3613 L
-7832.2217 8583.4824 L
-7890.9351 8569.7168 L
-7876.2754 8589.3594 L
-7890.9351 8609 L
-7832.2217 8595.2354 L
b
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 5)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7735.3994 8612 m
-7735.3994 8598.4199 L
-7894 8598.4199 L
-7894 8612 L
-7735.3994 8612 L
n
u
u
0 O
0.285 0.228 0.171 0 k
-7750.0786 8610.4844 m
-7750.0435 8611.6895 L
-7736.5103 8612.5176 -7735.8418 8611.2822 v
-7735.7441 8611.1016 -7735.6475 8610.7148 -7735.5615 8610.1934 C
-7737.5845 8610.8242 -7747.2915 8610.5713 -7750.0786 8610.4844 C
f
0.44 0.352 0.264 0 k
-7750.4063 8599.0234 m
-7750.3711 8600.2666 L
-7747.4912 8600.0488 -7737.1914 8599.3164 -7735.5435 8599.8652 C
-7735.7031 8599.2188 -7735.9199 8598.7646 -7736.2046 8598.6152 c
-7737.8306 8597.7656 -7750.4063 8599.0234 Y
f
0.145 0.116 0.087 0 k
-7750.3711 8600.2666 m
-7750.0786 8610.4844 L
-7747.2915 8610.5713 -7737.5845 8610.8242 -7735.5615 8610.1934 C
-7735.1519 8607.7773 -7734.9258 8602.3594 -7735.5435 8599.8652 C
-7737.1914 8599.3164 -7747.4912 8600.0488 -7750.3711 8600.2666 C
f
U
u
0.155 0.124 0.093 0 k
-7775.9375 8604.2734 m
-7774.8975 8604.6563 L
-7756.0728 8600.1465 L
-7756.4814 8599.3145 L
-7775.3633 8601.7246 L
-7776.2524 8602.0059 L
-7776.6504 8601.8936 -7777.1934 8601.8242 V
-7776.6094 8602.2373 -7776.1426 8603.1406 -7775.9375 8604.2734 C
f
u
0.085 0.068 0.051 0 k
-7780.7993 8608.666 m
-7781.5977 8608.7217 -7778.7495 8608.6641 Y
-7779.3481 8608.0176 -7779.7715 8606.8193 -7779.8105 8605.4375 c
-7779.8169 8605.2246 -7779.8105 8605.0176 -7779.7993 8604.8135 C
-7780.0415 8604.707 -7780.0918 8604.7734 -7780.6289 8604.5645 C
-7780 8608.6113 -7780.7993 8608.666 v
f
0.305 0.244 0.183 0 k
-7779.3442 8601.8672 m
-7779.5527 8601.8105 -7779.4937 8603.9307 Y
-7778.4785 8604.7578 L
-7776.8359 8603.9434 L
-7775.9375 8604.2734 L
-7776.1426 8603.1406 -7776.6094 8602.2373 -7777.1934 8601.8242 C
-7777.6094 8601.7705 -7778.8745 8601.7998 -7779.3442 8601.8672 C
f
U
0.115 0.092 0.069 0 k
-7775.9375 8604.2734 m
-7776.8359 8603.9434 L
-7778.4785 8604.7578 L
-7779.4937 8603.9307 L
-7779.7935 8604.708 -7779.7993 8604.8135 V
-7778.5137 8605.3789 -7777.1831 8605.7402 -7775.8398 8605.9258 C
-7775.79 8605.7266 -7775.7842 8605.543 -7775.79 8605.3369 c
-7775.7998 8604.9717 -7775.8218 8604.6182 -7775.9375 8604.2734 C
f
0.41 0.328 0.246 0 k
-7756.4512 8600.3965 m
-7758.3774 8601.6426 -7767.3862 8607.0986 -7775.8398 8605.9258 C
-7775.9038 8607.0928 -7776.2485 8608.0908 -7776.75 8608.6631 C
-7776.1895 8608.6621 L
-7755.7402 8611.7559 L
-7756.0366 8601.4258 L
-7756.0728 8600.1465 L
-7756.2046 8600.2373 -7756.4512 8600.3965 v
f
0.395 0.316 0.237 0 k
-7779.8105 8605.4375 m
-7779.7715 8606.8193 -7779.3481 8608.0176 -7778.7495 8608.6641 C
-7776.6807 8608.6631 L
-7776.1782 8608.0908 -7775.8218 8607.0713 -7775.8398 8605.9258 C
-7777.1831 8605.7402 -7778.5137 8605.3789 -7779.7993 8604.8135 C
-7779.8105 8605.0176 -7779.8169 8605.2246 -7779.8105 8605.4375 c
f
U
u
0 0 0 0.11 k
-7750.2642 8599.2012 m
-7749.2407 8599.0352 L
-7750.2642 8599.2012 L
-7750.2642 8599.2012 L
f
0 0 0 0.34 k
-7756.4814 8599.3145 m
-7756.0728 8600.1465 L
-7754.6714 8599.918 L
-7753.5234 8599.7314 L
-7751.6758 8599.4307 L
-7750.2642 8599.2012 L
-7749.2407 8599.0352 L
-7749.2954 8598.7168 -7749.3672 8598.498 -7749.4648 8598.4199 C
-7756.4814 8599.3145 L
f
0 0 0 0.32 k
-7754.8042 8604.207 m
-7755.0415 8611.8613 L
-7749.7144 8612 L
-7748.7266 8608.5146 -7749.1816 8604.1543 V
-7754.8042 8604.207 L
f
U
0.025 0.02 0.015 0 k
-7748.3223 8601.3848 m
-7745.3735 8601.9199 -7742.2402 8602.1602 -7739.3159 8601.3613 c
-7739.2856 8601.3496 -7739.2754 8601.3184 -7739.2871 8601.2969 c
-7739.2881 8601.2656 -7739.3198 8601.2559 -7739.3418 8601.2559 c
-7742.2422 8602.0645 -7745.3755 8601.8242 -7748.3042 8601.2783 c
-7748.3262 8601.2793 -7748.3574 8601.291 -7748.3672 8601.3223 c
-7748.3662 8601.3438 -7748.3555 8601.375 -7748.3223 8601.3848 c
-7748.3223 8601.3848 l
f
-7746.8374 8600.3066 m
-7746.7295 8600.3789 -7746.6313 8600.4941 -7746.5234 8600.502 c
-7742.7886 8600.832 -7739.1631 8600.7813 -7735.4746 8600.6641 c
-7735.4526 8600.6641 -7735.4209 8600.6426 -7735.4214 8600.6201 c
-7735.4214 8600.5879 -7735.4551 8600.5674 -7735.4766 8600.5674 c
-7738.3223 8600.6816 -7741.1401 8600.6992 -7744.0039 8600.5352 c
-7744.9336 8600.4766 -7745.9082 8600.7402 -7746.7778 8600.2207 c
-7746.7993 8600.2109 -7746.8306 8600.2109 -7746.8506 8600.2334 c
-7746.8618 8600.2559 -7746.8594 8600.2871 -7746.8374 8600.3066 c
-7746.8374 8600.3066 l
f
-7742.3735 8602.3672 m
-7740.5098 8603.6797 -7738.3022 8604.374 -7736.1001 8604.8857 c
-7736.0679 8604.8965 -7736.0474 8604.8848 -7736.0366 8604.8535 c
-7736.0273 8604.8193 -7736.0488 8604.8008 -7736.0703 8604.79 c
-7738.2617 8604.2656 -7740.4595 8603.6025 -7742.3105 8602.2793 c
-7742.3433 8602.2598 -7742.3755 8602.2705 -7742.3848 8602.293 c
-7742.4058 8602.3145 -7742.3945 8602.3457 -7742.3735 8602.3672 c
-7742.3735 8602.3672 l
f
-7747.9321 8609.0566 m
-7745.7295 8609.5703 -7743.5298 8610.0303 -7741.2798 8610.2754 c
-7741.2598 8610.2842 -7741.2295 8610.2637 -7741.2295 8610.2422 c
-7741.2183 8610.209 -7741.2407 8610.1777 -7741.2729 8610.1777 c
-7743.5122 8609.8809 -7745.7305 8609.5176 -7747.9126 8608.9502 c
-7747.9351 8608.9512 -7747.9673 8608.9629 -7747.9766 8608.9941 c
-7747.9751 8609.0156 -7747.9648 8609.0479 -7747.9321 8609.0566 c
-7747.9321 8609.0566 l
f
-7747.4395 8608.3594 m
-7745.3457 8609.1973 -7743.1016 8608.9297 -7740.9023 8608.9629 c
-7740.8706 8608.9609 -7740.8496 8608.9395 -7740.8506 8608.9082 c
-7740.8521 8608.875 -7740.8735 8608.8555 -7740.8945 8608.8555 c
-7743.0928 8608.8438 -7745.3374 8609.0986 -7747.4209 8608.2529 c
-7747.4434 8608.2529 -7747.4746 8608.2656 -7747.4834 8608.2969 c
-7747.4834 8608.3184 -7747.4722 8608.3506 -7747.4395 8608.3594 c
-7747.4395 8608.3594 l
f
-7746.7075 8609.7041 m
-7745.3833 8609.752 -7744.1504 8609.5469 -7742.8271 8609.209 c
-7742.3594 8609.0986 -7741.9199 8609.2266 -7741.4609 8609.2129 c
-7740.8975 8609.1973 l
-7740.8745 8609.1953 -7740.8633 8609.1855 -7740.8535 8609.1738 c
-7740.8345 8609.1514 -7740.8442 8609.1201 -7740.8662 8609.0986 c
-7741.0625 8608.9453 l
-7741.0742 8608.9453 -7741.0854 8608.9346 -7741.0962 8608.9346 c
-7741.5 8608.9473 l
-7742.9551 8609.1914 -7744.4575 8609.6719 -7745.8926 8609.0742 c
-7745.9258 8609.0645 -7745.9575 8609.085 -7745.9673 8609.1074 c
-7745.9673 8609.1377 -7745.9551 8609.1602 -7745.9336 8609.1709 c
-7744.6475 8609.6992 -7743.1714 8609.4746 -7741.8818 8609.0537 c
-7741.0918 8609.043 L
-7741.1245 8609.0332 L
-7740.9282 8609.1865 L
-7740.8984 8609.0898 L
-7741.4639 8609.1064 l
-7741.9321 8609.1406 -7742.3848 8608.9834 -7742.8398 8609.1025 c
-7744.1543 8609.4609 -7745.3975 8609.625 -7746.71 8609.5986 c
-7746.7422 8609.5996 -7746.7642 8609.6201 -7746.7617 8609.6533 c
-7746.7617 8609.6855 -7746.7402 8609.7061 -7746.7075 8609.7041 c
-7746.7075 8609.7041 l
f
-7747.5718 8610.0605 m
-7744.8711 8611.2207 -7741.9023 8610.5703 -7739.1279 8610.1816 c
-7738.7832 8610.2891 l
-7738.7617 8610.2988 -7738.7417 8610.2871 -7738.7207 8610.2656 c
-7738.71 8610.2441 -7738.7217 8610.2129 -7738.7422 8610.2021 c
-7739.0801 8610.0098 l
-7741.7754 8609.3926 -7744.5391 8609.7813 -7747.2715 8609.7852 c
-7747.3022 8609.7871 -7747.3232 8609.8086 -7747.3223 8609.8398 c
-7747.3198 8609.8721 -7747.2983 8609.8926 -7747.2681 8609.8926 c
-7744.6738 8609.9346 -7742.0303 8609.4434 -7739.4727 8610.0742 c
-7738.7954 8610.2891 L
-7738.7534 8610.1914 L
-7739.1406 8610.085 l
-7741.9058 8610.4424 -7744.8418 8611.1338 -7747.5313 8609.9746 c
-7747.5537 8609.9648 -7747.5854 8609.9648 -7747.5962 8609.998 c
-7747.6055 8610.0186 -7747.6055 8610.0508 -7747.5718 8610.0605 c
-7747.5718 8610.0605 l
f
-7744.6895 8603.3945 m
-7743.3945 8603.9004 -7741.9834 8603.6465 -7740.6802 8603.3438 c
-7740.6475 8603.3418 -7740.6367 8603.3193 -7740.6382 8603.2891 c
-7740.6504 8603.2568 -7740.6714 8603.2461 -7740.7031 8603.248 c
-7741.9985 8603.5303 -7743.3774 8603.8154 -7744.6504 8603.2969 c
-7744.6826 8603.2871 -7744.7144 8603.2988 -7744.7246 8603.3311 c
-7744.7222 8603.3525 -7744.7114 8603.3848 -7744.6895 8603.3945 c
-7744.6895 8603.3945 l
f
-7745.1401 8605.2207 m
-7743.2266 8605.6895 -7741.3145 8606.1025 -7739.3555 8606.3242 c
-7739.3242 8606.334 -7739.3022 8606.3125 -7739.2935 8606.2793 c
-7739.2954 8606.2598 -7739.3159 8606.2285 -7739.3374 8606.2285 c
-7741.2959 8606.0078 -7743.2095 8605.582 -7745.1206 8605.1133 c
-7745.1426 8605.1152 -7745.1738 8605.126 -7745.1831 8605.1582 c
-7745.1831 8605.1797 -7745.1719 8605.2109 -7745.1401 8605.2207 c
-7745.1401 8605.2207 l
f
-7745.9336 8607.6348 m
-7743.4995 8608.4609 -7740.8647 8608.0537 -7738.3457 8608.0879 c
-7738.3135 8608.0879 -7738.2935 8608.0664 -7738.2935 8608.0332 c
-7738.2954 8608.0117 -7738.3159 8607.9922 -7738.3481 8607.9922 c
-7740.8574 8607.916 -7743.4814 8608.3848 -7745.8945 8607.5264 c
-7745.9282 8607.5273 -7745.9595 8607.5391 -7745.9688 8607.5605 c
-7745.9678 8607.5918 -7745.9561 8607.624 -7745.9336 8607.6348 c
-7745.9336 8607.6348 l
f
-7741.0542 8608.8496 m
-7739.6582 8609.5449 -7738.0503 8609.4033 -7736.5342 8609.4668 c
-7736.5024 8609.4648 -7736.4824 8609.4434 -7736.4824 8609.4121 c
-7736.4834 8609.3906 -7736.5054 8609.3594 -7736.5366 8609.3594 c
-7738.0137 8609.2207 -7739.6489 8609.5234 -7741.0039 8608.7617 c
-7741.0366 8608.7529 -7741.0679 8608.7637 -7741.0786 8608.7861 c
-7741.0879 8608.8076 -7741.0767 8608.8398 -7741.0542 8608.8496 c
-7741.0542 8608.8496 l
f
-7740.3418 8605.4248 m
-7739.3926 8605.3975 -7738.4336 8605.3701 -7737.4839 8605.3418 c
-7737.4526 8605.3418 -7737.4312 8605.3193 -7737.4336 8605.2881 c
-7737.4336 8605.2559 -7737.4551 8605.2354 -7737.4878 8605.2354 c
-7738.4375 8605.2637 -7739.3975 8605.291 -7740.3457 8605.3184 c
-7740.3774 8605.3184 -7740.3975 8605.3418 -7740.3975 8605.373 c
-7740.3975 8605.4033 -7740.3745 8605.4258 -7740.3418 8605.4248 c
-7740.3418 8605.4248 l
f
-7738.1592 8603.0361 m
-7737.6895 8603.0645 -7737.2095 8603.0723 -7736.7383 8603.0918 c
-7736.7168 8603.0908 -7736.6855 8603.0684 -7736.6865 8603.0361 c
-7736.6875 8603.0039 -7736.71 8602.9834 -7736.7417 8602.9834 c
-7737.2114 8602.9873 -7737.6816 8602.9375 -7738.1514 8602.9395 c
-7738.1831 8602.9297 -7738.2031 8602.9512 -7738.2134 8602.9834 c
-7738.2129 8603.0156 -7738.1914 8603.0361 -7738.1592 8603.0361 c
-7738.1592 8603.0361 l
f
-7745.9702 8605.2344 m
-7745.5688 8605.5098 -7745.1255 8605.6797 -7744.6455 8605.751 c
-7744.6113 8605.7607 -7744.5918 8605.7383 -7744.5806 8605.7168 c
-7744.5703 8605.6855 -7744.5928 8605.6543 -7744.6152 8605.6543 c
-7745.0854 8605.5723 -7745.5176 8605.4023 -7745.9209 8605.1475 c
-7745.9521 8605.1377 -7745.9849 8605.1377 -7745.9946 8605.1709 c
-7746.0039 8605.1934 -7745.9922 8605.2246 -7745.9702 8605.2344 c
-7745.9702 8605.2344 l
f
-7747.1904 8611.085 m
-7744.7344 8611.5273 -7742.2983 8612.001 -7739.7993 8611.7266 c
-7739.7778 8611.7266 -7739.7568 8611.7041 -7739.7578 8611.6719 c
-7739.7578 8611.6406 -7739.7798 8611.6191 -7739.8022 8611.6191 c
-7742.2915 8611.873 -7744.7344 8611.4844 -7747.1719 8610.9775 c
-7747.1934 8610.9785 -7747.2256 8610.9902 -7747.2344 8611.0215 c
-7747.2344 8611.043 -7747.2222 8611.0752 -7747.1904 8611.085 c
-7747.1904 8611.085 l
f
0.195 0.156 0.117 0 k
-7747.1665 8599.6445 m
-7744.7969 8599.2666 -7742.4058 8599.3477 -7740.0298 8599.5898 c
-7739.9985 8599.5879 -7739.9766 8599.5664 -7739.9766 8599.5352 c
-7739.9785 8599.5137 -7740 8599.4824 -7740.0215 8599.4824 c
-7742.4082 8599.2422 -7744.7915 8599.1602 -7747.1694 8599.5391 c
-7747.2026 8599.5391 -7747.2222 8599.5605 -7747.2217 8599.5938 c
-7747.2207 8599.625 -7747.1992 8599.6465 -7747.1665 8599.6445 c
-7747.1665 8599.6445 l
f
0.335 0.268 0.201 0 k
-7746.4351 8599.1113 m
-7743.9282 8599.1152 -7741.4146 8599.2773 -7738.9185 8598.8965 c
-7738.8862 8598.8945 -7738.8647 8598.873 -7738.8662 8598.8418 c
-7738.8672 8598.8086 -7738.8896 8598.7891 -7738.9209 8598.7891 c
-7741.4185 8599.1689 -7743.9297 8599.0293 -7746.4375 8599.0059 c
-7746.46 8599.0059 -7746.4814 8599.0273 -7746.4785 8599.0586 c
-7746.4785 8599.0918 -7746.4575 8599.1113 -7746.4351 8599.1113 c
-7746.4351 8599.1113 l
f
0.205 0.164 0.123 0 k
-7747.9766 8599.3262 m
-7746.5039 8599.668 -7745.0078 8599.4023 -7743.5391 8599.2207 c
-7743.5078 8599.2207 -7743.4873 8599.1973 -7743.4995 8599.166 c
-7743.5 8599.1338 -7743.5215 8599.1133 -7743.5537 8599.125 c
-7745.0103 8599.2842 -7746.4961 8599.583 -7747.9473 8599.2188 c
-7747.9785 8599.2207 -7748.0103 8599.2314 -7748.0098 8599.2637 c
-7748.0195 8599.2842 -7747.9985 8599.3164 -7747.9766 8599.3262 c
-7747.9766 8599.3262 l
f
-7741.3535 8598.7949 m
-7740.1978 8598.9209 -7739.0273 8598.8145 -7737.8926 8598.5898 c
-7737.8711 8598.5781 -7737.8506 8598.5566 -7737.8618 8598.5244 c
-7737.8623 8598.5029 -7737.8945 8598.4824 -7737.9165 8598.4941 c
-7739.0503 8598.7402 -7740.1914 8598.793 -7741.3462 8598.6885 c
-7741.3794 8598.6895 -7741.3984 8598.7109 -7741.4087 8598.7324 c
-7741.4082 8598.7646 -7741.3862 8598.7852 -7741.3535 8598.7949 c
-7741.3535 8598.7949 l
f
0.335 0.268 0.201 0 k
-7748.2681 8601.4473 m
-7746.9214 8602.1885 -7745.3066 8601.5977 -7743.8555 8601.6416 c
-7743.8223 8601.6406 -7743.8022 8601.6191 -7743.8022 8601.585 c
-7743.8042 8601.5654 -7743.8262 8601.5449 -7743.8574 8601.5449 c
-7745.2886 8601.4902 -7746.8823 8602.0801 -7748.2168 8601.3506 c
-7748.2383 8601.3398 -7748.2695 8601.3516 -7748.2915 8601.374 c
-7748.3008 8601.3945 -7748.2886 8601.4277 -7748.2681 8601.4473 c
-7748.2681 8601.4473 l
f
-7746.8945 8603.5645 m
-7744.6719 8604.0449 -7742.3896 8603.6162 -7740.1504 8603.5625 c
-7740.1177 8603.5615 -7740.0977 8603.5391 -7740.0977 8603.5078 c
-7740.1001 8603.4863 -7740.1318 8603.4668 -7740.1519 8603.4668 c
-7742.3833 8603.4775 -7744.6519 8603.9805 -7746.8755 8603.457 c
-7746.8975 8603.457 -7746.9287 8603.4688 -7746.9375 8603.502 c
-7746.9375 8603.5225 -7746.9258 8603.5537 -7746.8945 8603.5645 c
-7746.8945 8603.5645 l
f
-7741.0273 8600.1406 m
-7739.3496 8600.9688 -7737.4995 8601.502 -7735.6035 8601.3613 c
-7735.5718 8601.3613 -7735.5513 8601.3389 -7735.5527 8601.3066 c
-7735.5527 8601.2754 -7735.5742 8601.2529 -7735.6074 8601.2559 c
-7737.4814 8601.416 -7739.3198 8600.8604 -7740.9873 8600.0537 c
-7741.0078 8600.0449 -7741.0415 8600.0449 -7741.0503 8600.0781 c
-7741.0615 8600.0986 -7741.0615 8600.1309 -7741.0273 8600.1406 c
-7741.0273 8600.1406 l
f
u
0.5 0.85 1 0.45 k
-7894 8606.9082 m
-7894.0254 8607.4873 -7893.5664 8608.1865 -7892.1675 8608.9902 C
-7891.8521 8609.0029 -7890.3945 8609.0234 -7888.0889 8609.0488 C
-7888.0889 8606.8223 L
-7890.1382 8606.8457 -7892.1177 8606.8857 -7894 8606.9082 C
f
-7893.5088 8605.9688 m
-7888.0889 8605.8447 L
-7888.0889 8604.8145 L
-7891.6445 8604.959 L
-7892.8145 8605.3301 -7893.5088 8605.9688 V
f
0.5 0.85 1 0.32 k
-7888.0889 8605.8252 m
-7893.4746 8605.9434 L
-7893.7695 8606.2139 -7893.9849 8606.5566 -7894 8606.9277 C
-7892.1177 8606.9063 -7890.1382 8606.8848 -7888.0889 8606.8613 C
-7888.0889 8605.8252 L
f
0.5 0.85 1 0.45 k
-7783.1504 8605.6172 m
-7861.3584 8606.541 -7888.1079 8606.8418 V
-7888.1079 8609.0488 L
-7871.8145 8609.2314 -7812.9902 8609.707 Y
-7778.7495 8608.6641 L
-7779.4575 8605.5674 L
-7783.1504 8605.6172 L
f
0.5 0.85 1 0.12 k
-7888.1079 8604.8145 m
-7888.1079 8605.8447 L
-7779.4258 8604 L
-7779.3833 8601.8633 L
-7812.6553 8601.7129 L
-7888.1079 8604.8145 L
f
u
0.065 0.052 0.039 0 k
-7756.0728 8600.1465 m
-7756.0366 8601.4258 L
-7756.2954 8600.1162 L
-7774.8975 8604.6563 L
-7775.9375 8604.2734 L
-7775.8794 8604.6055 -7775.8398 8604.957 -7775.8306 8605.3223 c
-7775.8242 8605.5273 -7775.8281 8605.7285 -7775.8398 8605.9258 C
-7767.3862 8607.0986 -7757.9634 8602.6719 -7756.0366 8601.4258 C
-7755.7402 8611.7559 L
-7755.0415 8611.8613 L
-7754.8042 8604.207 L
-7749.1816 8604.1543 L
-7749.0898 8602.0137 -7749.0718 8600.0215 -7749.2407 8599.0352 C
-7756.0728 8600.1465 L
f
0.4 0.7 1 0 k
-7779.4575 8605.5879 m
-7779.4258 8603.9805 L
-7888.1079 8605.8252 L
-7888.1079 8606.8613 L
-7861.3584 8606.5605 -7779.4575 8605.5879 Y
f
U
U
0.025 0.02 0.015 0 k
-7743.7344 8608.0293 m
-7743.7344 8608.0625 -7743.7129 8608.082 -7743.6802 8608.082 c
-7740.6714 8608.1133 -7738.4214 8607.9453 -7735.4155 8607.8594 C
-7735.4087 8607.7656 L
-7738.3262 8607.8701 -7740.7607 8608.0078 -7743.6841 8607.9746 C
-7743.7168 8607.9766 -7743.7358 8607.998 -7743.7344 8608.0293 C
f
-7735.3994 8607.7656 m
-7735.4082 8607.7441 L
-7735.4087 8607.7656 L
-7735.4063 8607.7656 -7735.4033 8607.7656 -7735.3994 8607.7656 C
f
-7739.4487 8606.4238 m
-7740.4458 8606.292 -7741.3394 8606.7656 -7742.2114 8607.1973 C
-7742.2441 8607.208 -7742.2534 8607.2402 -7742.2422 8607.2705 C
-7742.2305 8607.293 -7742.1982 8607.3018 -7742.1777 8607.291 c
-7741.3262 8606.8301 -7740.4312 8606.4199 -7739.4678 8606.5186 c
-7738.1079 8606.6621 -7736.9038 8607.375 -7735.5254 8607.4521 C
-7735.4463 8607.3594 L
-7737.04 8607.2656 -7737.8647 8606.623 -7739.4487 8606.4238 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 50)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611 m
-7765.8774 8611 L
-7765.8774 8563.415 L
-7893 8563.415 L
-7893 8611 L
n
u
*u
0 O
0.9529 0.949 0.1961 0.0745 k
-7866.7935 8595.417 m
-7866.8232 8595.2666 L
-7868.9849 8589.3643 -7869.9438 8586.6377 -7870.2754 8585.2891 c
-7870.3657 8585.2891 L
-7870.6953 8586.6074 -7871.7754 8589.335 -7873.9673 8595.2666 c
-7873.9966 8595.417 L
-7866.7935 8595.417 l
f
1 D
-7877.1182 8603.9678 m
-7878.6191 8607.5361 -7879.3994 8609.709 -7877.1182 8609.917 c
-7877.1182 8610.9678 L
-7879.6992 8610.9375 -7882.5806 8610.917 -7885.3418 8610.917 c
-7889.0649 8610.917 -7891.5273 8610.9375 -7893 8610.9678 c
-7893 8609.917 L
-7891.1064 8609.709 -7890.0542 8607.5674 -7882.5513 8590.5029 c
-7870.6953 8563.415 L
-7868.8638 8563.415 L
-7857.1582 8590.5029 L
-7849.8047 8607.5078 -7848.7246 8609.709 -7846.8887 8609.917 c
-7846.8887 8610.9678 L
-7848.5142 8610.9375 -7850.9165 8610.917 -7854.5767 8610.917 c
-7857.5488 8610.917 -7860.6694 8610.9375 -7863.7026 8610.9678 c
-7863.7026 8609.917 L
-7861.4814 8609.709 -7862.3218 8607.5078 -7863.7617 8603.9678 C
-7877.1182 8603.9678 l
f
*U
*u
0 D
-7822.0762 8579.0811 m
-7822.0762 8575.4717 -7824.3535 8573.0938 -7828.1294 8573.0938 c
-7829.2383 8573.0938 -7830.0767 8573.2158 -7830.5273 8573.2441 c
-7830.5273 8585.5479 L
-7829.8672 8585.6074 -7829.2085 8585.6074 -7828.7295 8585.6074 c
-7827.2002 8585.6074 -7825.7026 8585.127 -7824.6841 8584.4053 c
-7823.3945 8583.5322 -7822.0762 8581.7881 -7822.0762 8579.1416 C
-7822.0762 8579.0811 l
f
1 D
-7841.0806 8583.3926 m
-7841.0806 8567.6445 -7841.0806 8565.4287 -7843.5425 8565.2783 c
-7843.5425 8564.3184 L
-7842.0425 8564.2588 -7839.3174 8564.1992 -7836.5664 8564.1689 c
-7834.6538 8564.1084 -7831.3945 8564.0186 -7829.1479 8563.9775 c
-7825.5825 8563.9775 -7822.5854 8564.4258 -7820.0049 8565.2617 c
-7815.3535 8566.8477 -7810.9702 8570.8525 -7810.9702 8578.6602 c
-7810.9702 8583.7432 -7813.4014 8587.3193 -7815.5034 8589.0605 c
-7816.5835 8590.0215 -7817.8135 8590.832 -7818.7744 8591.3125 c
-7818.7744 8591.4629 L
-7816.5234 8594.4912 -7814.6025 8597.0625 -7808.3906 8605.6426 c
-7806.5 8608.0645 -7804.9102 8609.7383 -7803.7402 8609.9775 c
-7803.7402 8611 L
-7805.6602 8611 -7808 8610.8848 -7810.1294 8610.8848 c
-7812.3511 8610.8848 -7813.8521 8611 -7815.4424 8611 c
-7816.6729 8611 -7817.7241 8610.9404 -7818.5039 8610.2725 c
-7822.0151 8604.8477 -7825.9121 8598.7559 -7829.1182 8593.7139 c
-7829.5078 8593.7139 -7829.9575 8593.7139 -7830.5273 8593.7139 c
-7830.5273 8596.2842 L
-7830.5273 8607.5264 -7830.4375 8609.7686 -7828.1895 8609.9775 c
-7828.1895 8610.9697 L
-7829.6279 8610.9404 -7832.9194 8610.915 -7835.6992 8610.915 c
-7838.9287 8610.915 -7841.8921 8610.9404 -7843.5122 8610.9697 c
-7843.5122 8609.9775 L
-7841.0518 8609.7686 -7841.0806 8607.5264 -7841.0806 8590.5918 C
-7841.0806 8583.3926 l
f
*U
*u
0 D
-7790.4561 8590.5928 m
-7790.4561 8607.4941 -7790.4561 8609.6475 -7793.2832 8609.9775 C
-7793.2832 8610.9697 l
-7791.3887 8610.9404 -7788.0542 8610.915 -7784.7822 8610.915 c
-7781.6294 8610.915 -7778.5688 8610.9404 -7776.2881 8610.9697 C
-7776.2881 8609.9775 l
-7779.2578 8609.9775 -7779.2881 8607.5244 -7779.2881 8590.5928 C
-7779.2881 8573.1514 L
-7771.8193 8573.1514 l
-7768.9995 8573.1514 -7767.5298 8573.96 -7766.8994 8576.2617 C
-7765.9072 8576.2617 l
-7765.9072 8571.4697 -7765.8774 8567.415 -7765.8774 8564.1709 c
-7770.3486 8564.2012 -7775.7485 8564.2314 -7781.0601 8564.2314 C
-7788.7446 8564.2314 l
-7793.5537 8564.2314 -7798.9966 8564.2012 -7803.9614 8564.1709 c
-7803.9614 8567.3848 -7803.9326 8571.4697 -7803.9326 8576.2617 C
-7802.9072 8576.2617 l
-7802.3657 8574.1094 -7800.7715 8573.1514 -7797.9438 8573.1514 C
-7790.4561 8573.1514 l
-7790.4561 8590.5928 L
f
*U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 6)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7893.75 8588 m
-7893.75 8612 L
-7883.75 8612 L
-7883.75 8588 L
-7893.75 8588 L
n
0 Ap
0 O
1 g
-7883.75 8590 m
-7884.0703 8590 -7884.3857 8590.0186 -7884.6982 8590.0479 c
-7886.5879 8590.2256 -7888.3198 8590.9346 -7889.7559 8592.0176 c
-7891.2529 8593.1465 -7892.4199 8594.6816 -7893.0942 8596.4639 c
-7893.5122 8597.5645 -7893.75 8598.7529 -7893.75 8600 c
-7893.75 8601.8623 -7893.2319 8603.5996 -7892.3457 8605.0918 c
-7890.6025 8608.0273 -7887.4102 8610 -7883.75 8610 C
-7883.75 8590 L
f
0 R
0 G
1 J 1 j 0.5 w-7883.75 8609.6816 m
-7886.7793 8608.7256 -7889.6074 8607.0674 -7892.3457 8605.0918 C
S
-7883.75 8604.0488 m
-7886.8999 8601.6426 -7889.9575 8598.9121 -7893.0942 8596.4639 C
S
-7889.7559 8592.0176 m
-7887.6904 8593.1084 -7885.7017 8594.4668 -7883.75 8595.957 C
S
-7884.6982 8590.0479 m
-7884.3809 8590.1309 -7884.0635 8590.2139 -7883.75 8590.3145 C
S
-7889.7559 8592.0176 m
-7888.3193 8590.9346 -7886.5879 8590.2256 -7884.6982 8590.0479 C
S
-7893.0942 8596.4639 m
-7893.5122 8597.5645 -7893.75 8598.7529 -7893.75 8600 c
-7893.75 8601.8623 -7893.2314 8603.5996 -7892.3457 8605.0918 C
S
-7883.75 8590 m
-7884.0703 8590 -7884.3857 8590.0186 -7884.6982 8590.0479 C
S
-7889.7559 8592.0176 m
-7891.2529 8593.1465 -7892.4199 8594.6816 -7893.0942 8596.4639 C
S
-7892.3457 8605.0918 m
-7890.6025 8608.0273 -7887.4102 8610 -7883.75 8610 C
S
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 62)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7894 8612 m
-7894 8573.7305 L
-7855.7305 8573.7305 L
-7855.7305 8612 L
-7894 8612 L
n
0 O
1 0.14 0.09 0 k
-7855.7305 8594.9033 m
-7855.7305 8586.3408 L
-7894 8586.3408 L
-7894 8594.9033 L
-7855.7305 8594.9033 L
f
-7855.7305 8598.0967 m
-7855.7305 8597.4229 L
-7894 8597.4229 L
-7894 8598.0967 L
-7855.7305 8598.0967 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 63)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7894 8612 m
-7894 8573.7305 L
-7855.7305 8573.7305 L
-7855.7305 8612 L
-7894 8612 L
n
0 O
1 0.14 0.09 0 k
-7855.7305 8590.8262 m
-7855.7305 8599.3896 L
-7868.3408 8599.3896 L
-7868.3408 8612 L
-7876.9038 8612 L
-7876.9063 8590.8262 L
-7876.9038 8590.8262 L
-7876.9038 8590.8252 L
-7855.7305 8590.8262 L
f
-7855.7305 8588.3066 m
-7879.4233 8588.3066 L
-7879.4233 8612 L
-7880.0967 8612 L
-7880.0977 8587.6328 L
-7855.7305 8587.6328 L
-7855.7305 8588.3066 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 64)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7894 8611.999 m
-7894 8573.7285 L
-7855.7305 8573.7285 L
-7855.7305 8611.999 L
-7894 8611.999 L
n
0 O
1 0.14 0.09 0 k
-7855.7305 8586.3389 m
-7881.3896 8586.3389 L
-7881.3896 8611.999 L
-7872.8262 8612 L
-7872.8262 8594.9033 L
-7855.7305 8594.9033 L
-7855.7305 8586.3389 L
f
-7855.7305 8597.4209 m
-7870.3081 8597.4209 L
-7870.3081 8612 L
-7869.6338 8612 L
-7869.6338 8598.0957 L
-7855.7305 8598.0957 L
-7855.7305 8597.4209 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 65)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7866.0625 8584.4609 m
-7893.6025 8584.4609 L
-7893.6025 8612 L
-7866.0625 8612 L
-7866.0625 8584.4609 L
n
0 O
0 0.55 1 0.12 k
-7865.8418 8597.7002 m
-7894 8597.7002 L
-7894 8598.8252 L
-7865.8418 8598.8252 L
-7865.8418 8597.7002 L
f
u
0 0.55 1 0.3 k
-7892.9814 8585.5215 m
-7893.4102 8587.5254 -7892.1865 8591.1514 -7889.0874 8594.251 c
-7885.9878 8597.3496 -7882.3457 8598.6602 -7880.3594 8598.1455 C
-7880.3594 8598.1455 L
-7879.8755 8596.1895 -7881.1519 8592.5117 -7884.25 8589.4141 c
-7887.3457 8586.3184 -7891.0122 8585.1064 -7892.9814 8585.5215 C
f
0 0.39 0.7 0.12 k
-7892.9814 8610.9912 m
-7893.4102 8608.9873 -7892.1865 8605.3613 -7889.0874 8602.2617 c
-7885.9878 8599.1641 -7882.3457 8597.8535 -7880.3594 8598.3672 C
-7880.3594 8598.3672 L
-7879.8755 8600.3242 -7881.1519 8604.001 -7884.25 8607.0986 c
-7887.3457 8610.1953 -7891.0122 8611.4063 -7892.9814 8610.9912 C
f
U
u
0 0.55 1 0.3 k
-7879.1782 8610.9912 m
-7879.6074 8608.9873 -7878.3838 8605.3613 -7875.2842 8602.2617 c
-7872.1855 8599.1641 -7868.5435 8597.8535 -7866.5576 8598.3672 C
-7866.5566 8598.3672 L
-7866.0718 8600.3242 -7867.3496 8604.001 -7870.4473 8607.0986 c
-7873.5435 8610.1953 -7877.2095 8611.4063 -7879.1782 8610.9912 C
f
0 0.39 0.7 0.12 k
-7879.1782 8585.5215 m
-7879.6074 8587.5254 -7878.3838 8591.1514 -7875.2842 8594.251 c
-7872.1855 8597.3496 -7868.5435 8598.6602 -7866.5576 8598.1455 C
-7866.5566 8598.1455 L
-7866.0718 8596.1895 -7867.3496 8592.5117 -7870.4473 8589.4141 c
-7873.5435 8586.3184 -7877.2095 8585.1064 -7879.1782 8585.5215 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 67)0 A
u
0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7866.4609 8584.085 m
-7894 8584.085 L
-7894 8611.624 L
-7866.4609 8611.624 L
-7866.4609 8584.085 L
n
0 O
0 0.55 1 0.12 k
-7880.7598 8602.3623 m
-7880.7598 8612 L
-7879.6343 8612 L
-7879.6343 8602.3623 L
-7880.7598 8602.3623 L
f
0 0.55 1 0.3 k
-7884.4233 8597.876 m
-7883.3096 8596.1553 -7879.8809 8594.457 -7875.4966 8594.457 c
-7871.1152 8594.457 -7867.6138 8596.1064 -7866.5718 8597.874 C
-7866.5718 8597.874 L
-7867.6138 8599.6006 -7871.1152 8601.2979 -7875.4966 8601.2979 c
-7879.8755 8601.2979 -7883.3242 8599.5615 -7884.4233 8597.876 C
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 69)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7866.4609 8584.4609 m
-7894 8584.4609 L
-7894 8612 L
-7866.4609 8612 L
-7866.4609 8584.4609 L
n
0 O
0 0.55 1 0.3 k
-7884.4233 8598.252 m
-7883.3096 8596.5313 -7879.8809 8594.833 -7875.4966 8594.833 c
-7871.1152 8594.833 -7867.6138 8596.4824 -7866.5718 8598.25 C
-7866.5718 8598.25 L
-7867.6138 8599.9766 -7871.1152 8601.6738 -7875.4966 8601.6738 c
-7879.8755 8601.6738 -7883.3242 8599.9375 -7884.4233 8598.252 C
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 8)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7892.9521 8609.3125 m
-7785.7954 8609.3125 L
-7785.7954 8595.1855 L
-7892.9521 8595.1855 L
-7892.9521 8609.3125 L
n
u
0 O
0 0 0 1 k
-7891.2832 8608.623 m
-7891.8535 8611 -7891.8184 8607.0039 V
-7892.0479 8603.8018 L
-7892.6167 8601.4551 L
-7892.4502 8599.123 L
-7890.9502 8598.4551 -7874.2832 8597.123 V
-7867.6167 8595.7891 -7858.6167 8595.7891 V
-7793.3936 8596.4766 -7788.4912 8597.8848 v
-7829.3882 8595.875 -7831.9688 8596.5117 v
-7792.8569 8598.1602 -7789.8545 8599.4316 v
-7827.79 8597.5469 -7831.1675 8599.1777 v
-7796.2495 8600.9102 -7792.0215 8602.5313 v
-7798.7217 8601.8828 -7800.5127 8602.082 v
-7797.3896 8602.5703 l
-7802.4194 8602.502 l
-7805.3218 8602.1289 l
-7797.4521 8603.2422 -7796.9033 8603.8086 v
-7793.3154 8603.1309 -7807.5186 8603.3848 v
-7841.1177 8599.4551 -7891.2832 8608.623 V
f
/BBAccumRotation (5.805971) XT
0 R
0 0 0 0.5 K
0.025 w-7892.9502 8598.123 m
-7872.6675 8596.2949 -7852.9727 8595.2207 v
-7810.1514 8595.502 -7805.5737 8595.9004 v
-7793.1631 8596.0313 -7785.7959 8597.0273 v
S
/BBAccumRotation (5.805971) XT
0 0 0 1 K
-7830.8369 8595.4082 m
-7834.2959 8595.0273 -7860.2607 8595.2793 Y
-7870.6274 8595.1602 -7892.9502 8598.123 Y
S
/BBAccumRotation (5.805971) XT
-7829.9873 8598.6641 m
-7799.3608 8599.582 -7792.6606 8600.2314 v
S
/BBAccumRotation (5.805971) XT
0 0 0 0.5 K
-7838.6201 8603.2041 m
-7803.3706 8604.6172 -7800.4058 8605.1406 v
S
/BBAccumRotation (5.805971) XT
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 83)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893 8610.9346 m
-7679.4009 8610.9346 L
-7679.4009 8603.1338 L
-7893 8603.1338 L
-7893 8610.9346 L
n
0 O
0 0 0 1 k
-7893 8607.0352 m
-7882.9858 8609.5273 -7876.1875 8610.875 -7864.2007 8610.9346 c
-7851.2183 8611 -7786.2002 8610.9346 y
-7721.1816 8611 -7708.2002 8610.9346 v
-7696.2129 8610.875 -7689.4155 8609.5273 -7679.4009 8607.0352 C
-7689.4155 8604.543 -7696.2129 8603.1953 -7708.2002 8603.1338 c
-7721.1816 8603.0693 -7786.2002 8603.1338 y
-7851.2183 8603.0693 -7864.2007 8603.1338 v
-7876.1875 8603.1953 -7882.9858 8604.543 -7893 8607.0352 C
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 6 pt Flach/ Adobe Calligraphic) -
( Brush Tool/ 10 pt Oval/ Adobe Calligraphic Brush Tool/ 12 pt ) -
(Oval / Adobe Calligraphic Brush Tool/ 20 pt Oval/ Adobe Callig) -
(raphic Brush Tool/ 25 pt Rund / Adobe Calligraphic Brush Tool/) -
( 50 pt Flach/ Adobe Scatter Brush Tool/ Hundespuren/ Adobe Sca) -
(tter Brush Tool/ Blatt/ Adobe Scatter Brush Tool/ Marienk\344fer/) -
( Adobe Scatter Brush Tool/ Pin/ Adobe Scatter Brush Tool/ Erdb) -
(eere/ Adobe Scatter Brush Tool/ Stern/ Adobe ArtOnPath Brush T) -
(ool/ Marker/ Adobe ArtOnPath Brush Tool/ Zulaufende Linie/ Ado) -
(be ArtOnPath Brush Tool/ Pfeil/ Adobe ArtOnPath Brush Tool/ Pi) -
(nsel/ Adobe ArtOnPath Brush Tool/ Text/ Adobe PatternOnPath Br) -
(ush Tool/ Doppelte Linie/ Adobe PatternOnPath Brush Tool/ Lorb) -
(eer/ Adobe PatternOnPath Brush Tool/ Seil/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Blatt)
(1 /New Pattern 34/ 1 0.0745 0.9 0.9019 0.18 / 0 0.602793 1 1 0) -
(.1 1 1 -1 1 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Erdbeere)
(1 /New Pattern 37/ 1 0 0 0 1 / 0 0.803911 1 1 0.803911 1 1 -0.) -
(5 0.5 1 -75 75.419 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Hundespuren)
(1 /New Pattern 41/ 1 0 0 0 1 / 0 1 1 0 1 1 0 0 0 0 -90 -90 0 1) -
( 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Marienk\744fer)
(1 /New Pattern 10/ 5 0.898039 0 0 / 0 1 1 0 0.803911 1.2 1 -1.) -
(55 1.55 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Pin)
(1 /New Pattern 36/ 1 0.025 0.1 0.475 0 / 0 1 1 0 0.401676 1 1 ) -
(-1.06145 1.06 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Stern)
(1 /New Pattern 2/ 0 1 / 1 0.5 1 1 0.25 1 1 -0.5 0.5 1 0 0 0 0 ) -
(0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt Oval)
(1 1 19 15 15 130 130 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(12 pt Oval )
(1 7 17 45 45 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(20 pt Oval)
(1 20 20 20 100 40 80 0 2 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(25 pt Rund )
(1 10 40 100 100 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(50 pt Flach)
(1 40 60 0 0 44 44 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(6 pt Flach)
(1 4 8 10 10 90 90 2 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Marker)
(1 / New Pattern 8/ / / / / 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Pfeil)
(1 / New Pattern 45/ / / / / 5 0.898039 0 0 /  2 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Pinsel)
(1 / New Pattern 5/ / / / / 1 0.5 0.85 1 0.45 /  0 0 1 0 1 0 0 ) -
(0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Text)
(1 / New Pattern 50/ / / / / 1 0.952941 0.94902 0.196078 0.0745) -
(098 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Zulaufende Linie)
(1 / New Pattern 83/ / / / / 1 0 0 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Doppelte Linie)
(1 / New Pattern 62/ New Pattern 63/ New Pattern 64/ / / 1 1 0.) -
(14 0.09 0 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Lorbeer)
(1 / New Pattern 65/ New Pattern 42/ New Pattern 67/ / New Patt) -
(ern 69/ 1 0 0.55 1 0.3 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Seil)
(1 / New Pattern 1/ / / New Pattern 3/ New Pattern 6/ 5 0 0 0 /) -
(  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Passermarken]) 0 Xs
([Passermarken])
Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0.1 1 0 k
(C=0 M=10 Y=100 K=0)
Pc
0 0.5 0 0 k
(C=0 M=50 Y=0 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
1 0.55 1 0 k
(C=100 M=55 Y=100 K=0)
Pc
1 0.9 0.1 0 k
(C=100 M=90 Y=10 K=0)
Pc
0.15 1 1 0 k
(C=15 M=100 Y=100 K=0)
Pc
0.45 0.9 0 0 k
(C=45 M=90 Y=0 K=0)
Pc
0.5 0.4 0.3 0 k
(C=50 M=40 Y=30 K=0)
Pc
0.5 0.85 1 0 k
(C=50 M=85 Y=100 K=0)
Pc
0.75 0.05 1 0 k
(C=75 M=5 Y=100 K=0)
Pc
0.75 0.9 0 0 k
(C=75 M=90 Y=0 K=0)
Pc
0.8 0.05 0 0 k
(C=80 M=5 Y=0 K=0)
Pc
0.7 0.3 0.4 0.2 k
(Neues Farbfeld 10)
Pc
0.6 0.2 0.3 0 k
(Neues Farbfeld 11)
Pc
0.7 0.3 0.4 0 k
(Neues Farbfeld 12)
Pc
Bb
2 (Schwarz, Wei\737) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Schwarz, Wei\737)
Pc
Bb
2 (Chrom) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Chrom)
Pc
Bb
2 (Regenbogen) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Regenbogen)
Pc
Bb
0 0 0 0 Bh
2 (Gelb, Orange-Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Gelb, Orange-Radial)
Pc
(Ziegel) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Ziegel)
Pc
(Konfetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Konfetti)
Pc
(Bl\744tter) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Bl\744tter)
Pc
(Streifen) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Streifen)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Ebene 1) Ln
0 A
u
0 O
0 0 0 1 k
0 R
0 G
0 J 1 j 0.987466 w 4 M []0 d0 XR
377.6992 438.4761 m
379.4736 438.7329 l
379.501 449.5449 l
379.457 450.8921 378.3467 451.3857 v
376.4189 452.2427 374.2734 451.1387 372.4219 450.3984 c
B
362.6709 447.9297 m
364.7686 448.002 l
364.7686 470.1475 L
364.7686 472.2461 365.0156 473.6035 359.708 473.6035 c
B
u
1 0 0.57 0.3 k
222.0635 465.9888 m
222.1714 468.8911 221.8301 474.1973 222.0635 478.417 C
224.3931 476.3486 230.0645 470.3701 230.7134 469.7212 C
230.9326 468.8672 230.6582 467.541 230.7134 466.2803 C
229.7261 466.9561 228.1016 468.0151 226.7095 468.9766 C
225.5669 468.043 222.6924 466.4565 222.0635 465.9888 C
b
237.6572 459.7891 m
237.6572 456.3721 237.8296 453.0386 237.6572 449.6377 C
236.3965 449.498 233.5518 450.915 232.4907 451.5195 c
231.7583 451.9375 230.0303 452.6772 229.2188 453.2598 C
229.2188 455.5723 228.9004 461.3687 229.2188 463.3315 C
231.314 462.6523 235.4985 460.4766 237.6572 459.7891 c
B
235.9375 435.335 m
233.77 434.2012 229.2012 430.5283 228.252 429.5791 C
228.4985 428.1802 228.3218 424.3916 243.187 417.4414 c
250.1406 414.1904 257.7378 413.0654 263.4238 413.1113 C
263.5591 415.5313 263.5195 418.0615 263.4238 419.9395 C
260.3589 419.9102 249.5234 422.9551 244.6685 425.835 c
240.0142 428.5957 233.9038 432.9087 235.9375 435.335 C
b
412.2969 390.084 m
405.2988 404.4141 l
405.2988 422.1792 l
410.2109 414.8789 l
410.2109 407.4824 l
412.2969 400.9678 l
412.2969 390.084 l
b
418.6787 414.8789 m
418.6787 407.8135 l
420.3271 401.4531 l
420.3271 410.2432 l
418.6787 414.8789 l
b
192.0205 434.3428 m
215.0684 420.7813 l
213.3633 404.1846 l
192.0205 416.7012 l
192.0205 434.3428 l
b
192.0205 406.4775 m
214.0366 395.4648 l
213.3633 404.1846 l
197.5059 413.4844 l
192.0205 406.4775 l
b
230.6567 397.9814 m
230.6567 395.7627 230.0615 388.8926 y
213.3633 404.1846 l
214.2603 412.918 l
229.3721 399.5039 230.6567 397.9814 V
b
167.4155 391.9854 m
163.3364 398.4814 l
163.3364 406.0508 l
167.4155 406.1113 l
167.4155 391.9854 l
b
235.9087 390.7285 m
240.3208 389.1445 l
240.3208 378.3398 l
227.5547 382.3018 l
227.7549 390.96 l
230.0615 388.8926 l
235.9087 390.7285 l
b
227.7549 390.96 m
227.5547 382.3018 l
214.0366 395.4648 l
213.3633 404.1846 L
227.7549 390.96 L
b
208.3687 384.0801 m
230.1636 359.0684 l
237.1177 373.1123 l
214.0366 395.4648 l
208.3687 384.0801 l
b
192.0205 392.5869 m
208.3687 384.0801 l
214.0366 395.4648 l
192.0205 406.4775 l
192.0205 392.5869 l
b
212.0122 441.6338 m
211.77 430.8057 l
192.0205 441.3145 l
192.0205 449.1221 l
212.0122 441.6338 l
b
163.3364 434.6689 m
166.1353 442.2637 l
168.4629 442.1782 l
168.4678 448.7095 l
164.4805 449.6987 162.2041 450.3501 v
157.0454 451.8262 155.9111 452.7646 155.9111 454.4824 C
155.8892 407.1768 155.9873 404.1504 V
157.7153 403.4385 158.6772 402.5293 160.0122 401.457 C
161.0957 400.585 163.3364 398.4814 y
163.3364 434.6689 l
b
U
u
0.4 0 0.23 0.12 k
286.1304 387.3223 m
282.7461 382.1016 l
282.7461 407.8555 l
286.1304 413.2861 l
286.1304 387.3223 l
b
288.3286 416.9082 m
288.3286 434.9863 l
295.4971 437.1733 l
295.4971 421.3872 l
288.3286 416.9082 l
b
418.6787 407.8135 m
410.2109 407.4824 l
410.2109 414.8789 l
418.6787 414.8789 l
418.6787 407.8135 l
b
249.3423 437.4819 m
250.6343 434.4346 254.1621 433.2021 256.0581 432.3589 c
259.6719 430.7505 266.2412 430.0664 268.4121 429.8657 C
267.6821 428.0435 266.7197 426.6235 265.8521 424.8286 c
265.4111 423.915 263.8472 420.7476 263.4238 419.9395 C
257.4375 420.3218 248.0532 424.0415 245.2031 425.5474 c
243.4131 426.4927 233.4048 432.6426 235.9375 435.335 c
236.6865 436.1318 237.0503 437.1021 237.6572 437.71 C
238.4302 437.7764 248.8779 437.4946 249.3423 437.4819 C
b
240.3208 389.1445 m
244.6509 393.4756 l
235.9087 390.7285 l
240.3208 389.1445 l
b
410.2109 407.4824 m
418.6787 407.8135 l
420.3271 401.6406 l
412.2969 400.9678 l
410.2109 407.4824 l
b
433.7822 410.4092 m
431.1758 414.9727 L
430.0654 417.3184 431.1758 419.6631 434.1387 419.6631 C
439.3643 420.4038 l
427.8438 429.9082 l
418.3389 427.0693 l
416.4258 428.9824 l
412.167 428.9209 l
408.958 433.8584 l
393.2822 434.4756 l
378.4697 439.0425 L
377.2354 437.8081 373.0391 436.4502 371.8047 436.4502 C
368.834 428.1802 l
400.3994 422.6626 l
398.9238 425.5796 l
400.6211 426.0625 L
401.8184 424.8662 404.7324 423.1729 406.7939 425.2344 C
408.8799 423.877 l
405.2988 422.1792 l
410.2109 414.8789 l
418.6787 414.8789 l
420.3271 410.2432 l
433.7822 410.4092 l
b
378.2461 449.1641 m
378.2588 438.8545 L
377.2783 438.2207 374.6816 436.7295 371.8047 436.4502 C
371.9277 445.2139 l
377.1533 447.189 L
377.6055 447.5591 378.2461 448.2998 378.2461 449.1641 c
b
236.5142 468.0488 m
235.0664 467.2822 229.2188 463.3315 y
237.6572 459.7891 l
244.4521 464.8091 l
237.8643 467.4688 236.5142 468.0488 v
B
244.4521 454.8076 m
244.1885 452.9688 244.4521 449.5186 y
237.6572 449.6377 l
243.6753 453.8809 244.4521 454.8076 v
B
240.3208 378.3398 m
227.5547 382.3018 L
237.1177 373.1123 l
240.3208 378.3398 l
B
235.9375 435.335 m
230.8809 432.4058 222.8999 424.8838 y
211.77 430.8057 l
231.9985 438.8354 234.2246 438.8354 v
235.6304 438.8354 237.0913 438.2759 237.6572 437.71 C
236.8896 436.458 235.9375 435.335 V
b
222.0635 478.417 m
222.4375 478.4688 l
235.7813 480.4336 l
240.1426 484.7949 L
242.2207 486.8726 249.9346 487.6753 243.6812 481.4209 C
251.2515 483.7251 l
265.5693 473.3569 l
315.6006 467.5967 l
341.7686 478.2939 l
348.5176 473.686 l
360.3672 473.5215 L
363.3291 473.5215 364.9746 469.0776 360.6953 469.0776 C
349.2402 469.2427 l
347.4629 467.8022 l
342.9209 467.5967 l
317.082 458.3804 l
316.918 456.4053 l
311.6514 456.4053 L
314.2021 453.8545 319.0566 449.8223 323.9941 447.3535 C
328.1094 449.4932 l
330.5781 447.5186 l
365.4678 448.0122 L
373.0391 450.645 L
376.001 451.4683 380.2813 450.3164 377.1533 447.189 C
371.9277 445.2139 l
368.834 437.9639 l
339.0596 438.1372 l
315.1172 426.2544 l
315.1172 426.2544 l
304.8662 425.7939 l
304.8662 413.2861 l
286.1304 413.2861 l
282.7461 407.8555 l
270.6807 408.1846 l
270.3423 409.665 l
250.4287 407.1963 l
251.7451 404.0693 l
230.6567 397.9814 l
214.2603 412.918 l
223.8008 417.0723 l
223.7007 424.4575 l
222.9614 424.9414 l
228.2168 429.4766 L
228.2168 425.7319 234.8965 421.4629 242.0479 417.9824 c
249.4468 414.3818 256.98 413.2813 264.0557 413.0859 c
278.9966 412.6729 293.1777 414.0371 308.8408 434.728 C
295.4971 437.1733 l
288.3286 434.9863 L
286.4512 440.1123 278.2363 447.0942 266.5547 447.0942 c
255.5303 447.0942 249.2764 441.2642 249.3423 437.4819 C
244.4521 437.6289 l
244.4521 449.5186 l
244.4521 454.8076 l
244.4521 464.8091 l
236.5142 468.0488 l
232.0435 465.1206 l
230.7134 466.2803 l
230.7134 469.7212 L
222.0635 478.417 L
b
192.0205 434.3311 m
215.0684 420.7813 l
223.7007 424.4575 l
192.0205 441.3145 l
166.1353 442.2637 l
163.3364 434.8301 l
192.0205 434.3311 l
b
229.2188 463.3315 m
232.0435 465.1206 l
228.4429 467.8335 226.7095 468.9766 V
224.9697 466.9502 213.2505 461.7871 212.2524 461.2769 c
211.6025 460.9453 202.7939 456.7275 200.9648 456.0947 c
199.2744 455.5103 192.0972 453.4014 189.936 453.1357 c
185.1279 452.5454 180.436 452.8892 175.5835 453.0063 c
171.1338 453.1138 165.814 453.7666 161.7505 455.4282 c
159.624 456.2979 155.2236 457.1514 155.9873 453.6401 c
156.5093 451.2417 166.896 449.105 168.4678 448.7095 C
168.4692 448.8579 168.5093 449.1807 y
192.0205 449.1221 l
212.0122 441.6338 l
233.7183 449.8979 234.314 450.373 V
233.3145 451.249 229.2188 453.2598 y
229.2188 463.3315 l
b
U
u
0.6 0 0.34 0.18 k
237.1177 360.2422 m
230.1636 359.0684 l
237.1177 373.1123 l
237.1177 360.2422 l
b
234.314 450.373 m
235.2051 450.4854 237.6572 449.6377 y
237.6572 437.71 l
235.0952 439.2007 234.2246 438.8354 V
234.2813 442.4434 234.2891 448.1909 234.21 450.458 c
B
167.4155 391.9854 m
192.0205 392.5869 l
192.0205 406.4775 l
167.4155 406.1113 l
167.4155 391.9854 l
b
268.4121 429.8657 m
268.4121 413.0596 l
263.4238 413.1113 l
263.4238 419.9395 l
268.4121 429.8657 l
b
405.2988 407.1143 m
401.7715 407.1963 l
400.3994 411.2393 l
400.3994 422.6626 l
398.9238 425.5796 l
400.6211 426.0625 L
402.6709 424.4688 404.6074 423.5342 406.7939 425.2344 C
408.8799 423.877 l
405.2988 422.1792 l
405.2988 407.1143 l
b
349.2402 469.2427 m
347.4629 467.8022 l
347.4629 447.8062 l
349.2402 447.8062 l
349.2402 469.2427 l
b
368.834 428.1802 m
371.8047 436.4502 l
371.9277 445.2139 l
368.834 437.9639 l
368.834 428.1802 l
b
288.3286 417.0244 m
288.2656 432.6147 288.3286 434.9692 V
286.981 439.9595 279.5078 445.3076 271.0806 446.7295 c
257.3818 449.0405 249.3999 441.6753 249.3423 437.4819 C
250.0864 435.8979 252.2388 433.8994 253.8022 433.2412 c
254.918 432.7715 260.394 430.2749 268.4121 429.8657 C
268.4351 428.4155 268.4121 413.0596 y
263.9033 413.042 263.4238 413.1113 V
265.5439 413.0615 269.9038 412.9922 271.7427 413.1211 c
287.291 414.209 293.0166 419.9258 295.4971 421.3872 C
294.3735 420.6851 289.4214 417.54 288.3286 417.0244 C
b
295.4971 437.1733 m
297.8643 437.2632 306.6992 434.9551 308.8408 434.728 C
307.5381 432.6074 303.8135 428.6719 302.7568 427.5884 c
300.5361 425.3086 295.4971 421.3872 y
295.6113 434.9033 295.4971 437.1733 v
B
237.6572 449.6377 m
239.814 449.6377 244.4521 449.5186 y
244.4521 437.6289 l
237.6572 437.71 l
237.6284 445.9565 237.6572 449.6377 v
B
243.9639 374.5713 m
237.1177 360.2422 l
237.1177 373.1123 l
244.3306 384.6533 l
243.9639 374.5713 l
b
251.7451 395.7031 m
230.0615 388.8926 l
230.6567 397.9814 l
251.7451 404.0693 l
251.7451 395.7031 l
b
244.3306 384.6533 m
244.6509 393.4756 l
240.3208 389.1445 l
240.3208 378.3398 l
244.3306 384.6533 l
b
250.4287 407.1963 m
251.7451 404.0693 l
251.7451 395.7031 l
249.981 395.1484 l
249.981 388.416 l
270.6807 392.3018 l
270.6807 408.1846 l
270.3423 409.665 l
250.4287 407.1963 l
b
270.6807 408.1846 m
270.6807 382.1016 l
282.7461 382.1016 l
282.7461 407.8555 l
270.6807 408.1846 l
b
243.9639 374.5713 m
249.0645 376.5146 254.001 374.1582 260.2764 390.3955 C
249.981 388.416 l
249.981 395.1484 l
244.6509 393.4756 l
243.9639 374.5713 l
b
304.8662 387.2012 m
286.1304 387.3223 l
286.1304 413.2861 l
304.8662 413.2861 l
304.8662 387.2012 l
b
315.1172 398.1309 m
304.8662 398.1426 l
304.8662 413.2861 l
304.8662 425.7939 l
315.1172 426.2544 l
315.1172 398.1309 l
b
339.0596 408.5742 m
315.1172 398.1309 l
315.1172 426.2544 l
339.0596 438.1372 l
339.0596 408.5742 l
b
368.834 408.0898 m
339.0596 408.5742 l
339.0596 438.1372 l
368.834 437.9639 l
368.834 408.0898 l
b
368.834 428.1802 m
400.3994 422.6626 l
400.3994 403.4756 l
368.834 408.0898 l
368.834 428.1802 l
b
420.3271 410.2432 m
433.7822 410.4092 l
433.7822 391.2227 l
412.2969 390.084 l
412.2969 400.9678 l
420.3271 401.4531 l
420.3271 410.2432 l
b
439.3643 420.4038 m
439.3643 403.7402 l
433.7822 402.2617 l
433.7822 410.4092 l
431.1758 414.9727 L
430.374 416.5156 429.9385 419.0635 434.1387 419.6631 C
439.3643 420.4038 l
b
347.4629 467.8022 m
342.9209 467.5967 l
317.082 458.3804 l
316.918 456.4053 l
311.6514 456.4053 L
314.2021 453.8545 319.0566 449.8223 323.9941 447.3535 C
328.1094 449.4932 l
330.5781 447.5186 l
347.4629 447.8062 L
347.4629 467.8022 L
b
363.3291 471.1353 m
363.3291 447.9297 l
349.2402 447.8062 l
349.2402 469.2427 l
361.0654 469.1602 L
362.2998 469.1602 362.7939 469.5303 363.3291 471.1353 C
b
244.4521 464.8091 m
244.4521 454.8076 l
241.8213 452.6675 240.8403 451.9941 v
239.6011 451.1436 237.6572 449.6377 y
237.6572 459.7891 l
244.4521 464.8091 L
b
163.3364 415.5088 m
192.0205 416.7012 l
191.9204 433.0938 192.0205 434.3311 V
189.8369 434.3013 163.3364 434.6997 y
163.3364 415.5088 l
b
197.5059 413.4844 m
192.0205 416.7012 l
178.5972 416.123 173.6689 415.9258 v
170.3003 415.791 163.3364 415.5088 y
163.3364 406.0508 l
192.0205 406.4775 l
197.5059 413.4844 l
b
223.7007 424.4575 m
223.8008 417.0723 l
214.2603 412.918 l
215.0684 420.7813 l
223.7007 424.4575 l
b
234.314 450.373 m
234.0234 447.4639 234.2065 442.0308 234.2246 438.8354 C
231.7197 438.5962 211.77 430.8057 y
212.0122 441.6338 l
231.9556 449.4697 234.314 450.373 V
b
168.4927 449.1675 m
192.0205 449.1221 l
192.0205 441.3145 l
168.4629 442.1782 l
168.4927 449.1675 l
b
222.123 425.3286 m
222.8999 424.8838 l
228.4258 428.3047 l
228.2168 429.4766 l
229.0313 430.3149 l
229.8384 430.959 l
220.8809 425.958 l
222.123 425.3286 l
b
U
316.918 456.4053 m
316.918 451.856 l
S
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
